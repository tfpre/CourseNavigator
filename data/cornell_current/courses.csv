catalogNbr,coreq_text,created_at,description,id,instructors,outcomes,prereq_confidence,prereq_courses_mentioned,prereq_has_complex_logic,prereq_text,roster,subject,title,titleShort,unitsMax,unitsMin
1110,,2025-08-17T17:19:40.430879,"Programming and problem solving using Python. Emphasizes principles of software development, style, and testing. Topics include procedures and functions, iteration, recursion, arrays and vectors, strings, an operational model of procedure and function calls, algorithms, exceptions, object-oriented programming. Weekly labs provide guided practice on the computer, with staff present to help. ",SP25-CS-1110,"[""Michael Clarkson"", ""Lillian Lee""]","[""Be fluent in the use of procedural statements -assignments, conditional statements, loops, method calls- and  arrays."", ""Be able to design, code, and test small Python programs that meet requirements expressed in English. This includes a basic understanding of top-down design."", ""Understand the concepts of object-oriented programming as used in Python: classes, subclasses, inheritance, and overriding."", ""Have knowledge of basic searching and sorting algorithms. Have knowledge of the basics of vector computation.""]",,,,,SP25,CS,Introduction to Computing: A Design and Development Perspective,Intro Computing: Design & Dev,0,0
1112,,2025-08-17T17:19:40.430920,"Programming and problem solving using Python. Emphasizes the systematic development of algorithms and programs. Topics include iteration, functions, arrays, strings, recursion, object-oriented programming, algorithms, and data handling and visualization. Assignments are designed to build an appreciation for complexity, dimension, randomness, simulation, and the role of approximation in engineering and science. Weekly discussion section provides guided practice on the computer, with staff present to help.",SP25-CS-1112,"[""Daisy Fan""]","[""Be fluent in the use of procedural statements-assignments, conditional statements, loops, function calls-and arrays. Be able to design, code, and test small Python programs that meet requirements expressed in English. This includes a basic understanding of top-down design."", ""Understand the concepts of object-oriented programming as used in Python: classes, subclasses, inheritance, and overriding."", ""Have knowledge of basic sorting and searching algorithms."", ""Have a working familiarity with libraries such as NumPy and Matplotlib for scientific computation and data visualization.""]",0.6000000000000001,1,True,Prerequisite: MATH 1110 or equivalent.,SP25,CS,Introduction to Computing: An Engineering and Science Perspective,Intro Computing: Engrg & Sci,0,0
1132,,2025-08-17T17:19:40.430962,"Introduction to the MATLAB programming language. Covers the basic programming constructs of MATLAB, including assignment, conditionals, iteration, functions, arrays, vectorized computation, and scientific graphics. Designed for students who need MATLAB for research or other courses. Does not assume any previous programming experience.",SP25-CS-1132,"[""Daisy Fan""]","[""Students who take this course will understand the basic MATLAB constructs and be able to write simple programs.""]",,,,,SP25,CS,Short Course in MATLAB,Short Course in MATLAB,0,0
1133,,2025-08-17T17:19:40.430968,"Introduction to the Python programming language. Covers the basic programming constructs of Python, including assignment, conditionals, iteration, functions, object-oriented design, arrays, and vectorized computation. Designed for students who need Python for research or other courses. Does not assume any previous programming experience.",SP25-CS-1133,,"[""Students who take this course will build an understanding the basic Python constructs and be able to write simple programs.""]",,,,,SP25,CS,Short Course in Python,Short Course in Python,0,0
1340,,2025-08-17T17:19:40.430973,"Computing requires difficult choices that can have serious implications for real people. This course covers a range of ethical, societal, and policy implications of computing and information. It draws on recent developments in digital technology and their impact on society, situating these in the context of fundamental principles from computing, policy, ethics, and the social sciences. A particular emphasis will be placed on large areas in which advances in computing have consistently raised societal challenges: privacy of individual data; fairness in algorithmic decision-making; dissemination of online content; and accountability in the design of computing systems. As this is an area in which the pace of technological development raises new challenges on a regular basis, the broader goal of the course is to enable students to develop their own analyses of new situations as they emerge at the interface of computing and societal interests.",SP25-CS-1340,"[""Karen Levy"", ""Jon Kleinberg""]",,,,,,SP25,CS,Choices and Consequences in Computing,Consequences in Computing,0,0
1700,,2025-08-17T17:19:40.430978,"This course provides a non-programming introduction to the key ideas of Artificial Intelligence (AI), intended for students without significant technical background in computing.  Students will leave with an understanding of the core technical ideas that power modern AI, in such areas as machine learning and neural networks, computer vision, natural processing, game AI, and robotics, as well as our evolving appreciation of the societal implications of work in this area.",SP25-CS-1700,"[""Haym Hirsh""]",,,,,,SP25,CS,Elements of Artificial Intelligence,Elements of AI,0,0
1998,,2025-08-17T17:19:40.430984,First-year and Nontechnical Team Projects.,SP25-CS-1998,"[""Curran Muhlberger"", ""Walker White"", ""Eva Tardos""]",,,,,,SP25,CS,First-year and Nontechnical Team Projects,First-year Team Projects,0,0
2043,,2025-08-17T17:19:40.430989,"UNIX and UNIX-like systems are increasingly being used on personal computers, mobile phones, web servers, and many other systems. They represent a wonderful family of programming environments useful both to computer scientists and to people in many other fields, such as computational biology and computational linguistics, in which data is naturally represented by strings. This course takes students from shell basics and piping, to regular-expression processing tools, to shell scripting and Python. Other topics to be covered include handling concurrent and remote resources, manipulating streams and files, and managing software installations.",SP25-CS-2043,"[""Ronald DiNapoli""]",,1.0,0,True,Prerequisite: one programming course or equivalent programming experience.,SP25,CS,UNIX Tools and Scripting,UNIX Tools and Scripting,0,0
2110,,2025-08-17T17:19:40.431018,"Intermediate programming in a high-level language and introduction to software engineering. Topics include object-oriented programming (objects, classes, subtypes, encapsulation, polymorphism), program correctness (specifications, invariants, testing), algorithm analysis (asymptotic complexity, big ""O"" notation), recursion, data structures (lists, trees, stacks, queues, heaps, hash tables, graphs), iteration and searching/sorting, graph algorithms, and concurrent and event-driven programming (graphical user interfaces, synchronization). Java is the principal programming language.",SP25-CS-2110,"[""Curran Muhlberger"", ""Matthew Eichhorn""]","[""Employ recursion and object-oriented programming concepts (e.g., classes, interfaces, polymorphism, inheritance) to solve computational problems."", ""Design, implement, and verify nontrivial Java programs (roughly 1000 lines of code), starting from an English language specification, leveraging features like encapsulation and unit tests to improve maintainability."", ""Build and modify event-driven graphical user interfaces (GUIs) expressed in Java."", ""Analyze the asymptotic complexity of algorithms and programs to evaluate their running times and memory requirements."", ""Implement basic data structures taught in the course (linked lists, binary search trees, heaps, hash tables, adjacency lists) and be able to use them in programs.""]",0.6000000000000001,2,True,Prerequisite: CS 1110 or CS 1112 or equivalent course on programming in a procedural language.,SP25,CS,Object-Oriented Programming and Data Structures,Obj-Oriented Prog & Data Struc,0,0
2800,,2025-08-17T17:19:40.431033,"Covers the mathematics that underlies most of computer science. Topics include mathematical induction; logical proof; propositional and
predicate calculus; sets, functions, and relations; graphs; combinatorics and discrete mathematics; basic probability theory; andfinite-state machines. These topics are discussed in the context ofapplications to many areas of computer science.",SP25-CS-2800,"[""Eva Tardos"", ""Joe Halpern""]",,0.6000000000000001,1,True,"Prerequisite or corequisite: MATH 1110 or equivilent, one programming course or permission of instructor.",SP25,CS,Mathematical Foundations of Computing,Math Foundations of CS,0,0
3110,,2025-08-17T17:19:40.431040,"Advanced programming course that emphasizes functional programming techniques and data structures. Programming topics include recursive and higher-order procedures, models of programming language evaluation and compilation, type systems, and polymorphism. Data structures and algorithms covered include graph algorithms, balanced trees, memory heaps, and garbage collection. Also covers techniques for analyzing program performance and correctness.",SP25-CS-3110,"[""Anshuman Mohan""]",,0.625,2,True,Prerequisite: CS 2110 or equivalent programming experience. Prerequisite or corequisite: CS 2800.,SP25,CS,Data Structures and Functional Programming,Data Struct & Functional Progr,0,0
3152,,2025-08-17T17:19:40.431055,"A project-based course in which programmers and designers collaborate to make a computer game. This course investigates the theory and practice of developing computer games from a blend of technical, aesthetic, and cultural perspectives. Technical aspects of game architecture include software engineering, artificial intelligence, game physics, computer graphics, and networking. Aesthetic and cultural include art and modeling, sound and music, game balance, and player experience.",SP25-CS-3152,"[""Walker White""]",,0.625,2,True,"Prerequisite: CS 2110 for programmers, or permission of the instructor. Corequisite: ENGRC 3152.",SP25,CS,Introduction to Computer Game Architecture,Intro Game Architecture,0,0
3410,,2025-08-17T17:19:40.431065,"Introduction to computer organization, systems programming and the hardware/ software interface. Topics include instruction sets, computer arithmetic, datapath design, data formats, addressing modes, memory hierarchies including caches and virtual memory, I/O devices, bus-based I/O systems, and multicore architectures. Students learn assembly language programming and design a pipelined RISC processor.",SP25-CS-3410,"[""Hakim Weatherspoon"", ""Zachary Susag""]",,0.6000000000000001,1,True,Prerequisite: CS 2110 or equivalent programming experience.,SP25,CS,Computer System Organization and Programming,Computer System Organization,0,0
3420,,2025-08-17T17:19:40.431078,"An introduction to the design of embedded systems, with an emphasis on understanding the interaction between hardware, software, and the physical world. Topics covered include assembly language programming, interrupts, I/O, concurrency management, scheduling, resource management, and real-time constraints.",SP25-CS-3420,"[""Nils Napp""]",,0.6,2,False,Prerequisite: ECE 2300/ENGRD 2300.,SP25,CS,Embedded Systems,Embedded Systems,0,0
3700,,2025-08-17T17:19:40.431123,"Introduction to major topics in artificial intelligence, including heuristic search, game-playing, knowledge representation and reasoning, planning, probabilistic inference, sequential decision-making and reinforcement learning.",SP25-CS-3700,"[""Kevin Ellis""]",,0.3,3,True,"Prerequisite: CS 2110/ENGRD 2110 and CS 2800, or by permission of instructor.",SP25,CS,Foundations of AI Reasoning and Decision-Making,AI Reasoning/Decision-Making,0,0
3780,,2025-08-17T17:19:40.431174,"The course provides an introduction to machine learning, focusing on supervised learning and its theoretical foundations. Topics include regularized linear models, boosting, kernels, deep networks, generative models, online learning, and ethical questions arising in ML applications.",SP25-CS-3780,"[""Tushaar Gangavarapu"", ""Karthik Sridharan""]",,0.4000000000000001,11,True,"Prerequisite: probability theory (e.g. BTRY 3080, CS 2800, ECON 3130, ENGRD 2700, MATH 4710) and linear algebra (e.g. MATH 2210, MATH 2310, MATH 2940), single-variable calculus (e.g. MATH 1110, MATH 1920) and programming proficiency (e.g. CS 2110).",SP25,CS,Introduction to Machine Learning,Intro to Machine Learning,0,0
4090,,2025-08-17T17:19:40.431369,Earn course credit for working as a consultant or ugrad TA in a computer science course.,SP25-CS-4090,"[""Haym Hirsh"", ""Dexter Kozen"", ""Walker White"", ""Thorsten Joachims"", ""Lillian Lee"", ""Claire Cardie"", ""Michael Kim"", ""Steve Marschner"", ""Christopher De Sa"", ""Rachee Singh"", ""Kavita Bala"", ""Michael Clarkson"", ""Eva Tardos"", ""Wen Sun"", ""Rachit Agarwal"", ""Robbert VanRenesse"", ""Andrew Myers"", ""Lorenzo Alvisi"", ""Kevin Ellis"", ""Hakim Weatherspoon"", ""Bharath Hariharan"", ""Nate Foster"", ""Tanya Goyal"", ""Kilian Weinberger"", ""Anke van Zuylen"", ""Anshuman Mohan"", ""David Mimno"", ""Sarah Dean"", ""Cristian Danescu-Niculescu-Mizil"", ""Joon Suk Park"", ""Curran Muhlberger"", ""Robert Kleinberg"", ""Daisy Fan""]",,,,,,SP25,CS,Teaching Experience in Computer Science,Teaching Experience in CS,0,0
4152,,2025-08-17T17:19:40.431377,"Project-based follow-up course to CS 3152. Students work in a multidisciplinary team to develop a game that incorporates innovative game technology. Advanced topics include 3D game development, mobile platforms, multiplayer gaming, and nontraditional input devices. There is a special emphasis on developing games that can be submitted to festivals and competitions.",SP25-CS-4152,"[""Walker White""]",,0.7250000000000001,6,False,"Prerequisite: CS 3152, CS 3300 or CS 3700 or CS 4620 or CS 5414. Corequisite: ENGRC 4152.",SP25,CS,Advanced Topics in Computer Game Architecture,Adv Game Architecture,0,0
4220,,2025-08-17T17:19:40.431453,"Introduction to the fundamentals of numerical linear algebra: direct and iterative methods for linear systems, eigenvalue problems, singular value decomposition. In the second half of the course, the above are used to build iterative methods for nonlinear systems and for multivariate optimization. Strong emphasis is placed on understanding the advantages, disadvantages, and limits of applicability for all the covered techniques. Computer programming is required to test the theoretical concepts throughout the course.",SP25-CS-4220,"[""Anil Damle""]",,0.6000000000000001,2,True,Prerequisite: MATH 2210 or MATH 2940 or equivalent.,SP25,CS,Numerical Analysis: Linear and Nonlinear Problems,Num Analysis: Lin&Nonlin Equat,0,0
4300,,2025-08-17T17:19:40.431487,"How to make sense of the vast amounts of information available online, and how to relate it and to the social context in which it appears? This course introduces basic tools for retrieving and analyzing unstructured textual information from the web and social media. Applications include information retrieval (with human feedback), sentiment analysis, and social analysis of text. The coursework will include programming projects that play on the interaction between knowledge and social factors.",SP25-CS-4300,"[""Cristian Danescu-Niculescu-Mizil""]",,0.1,4,True,"Prerequisite: 1) linear algebra: strong performance in MATH 2940 or equivalent; 2) discrete math: strong performance in CS 2800 or equivalent. Note: the linear algebra and discrete math requirements can also be fulfilled with a strong performance in INFO 2950; and 3) programming proficiency: CS 2110 or equivalent with strong Python skills and familiarity with IPython Notebooks, or permission of instructor.",SP25,CS,Language and Information,Language and Information,0,0
4410,,2025-08-17T17:19:40.431536,"Introduction to the design of systems programs, with emphasis on multiprogrammed operating systems. Topics include concurrency, synchronization, deadlocks, memory management, protection, input-output methods, networking, file systems and security. The impact of network and distributed computing environments on operating systems is also discussed.",SP25-CS-4410,"[""Robbert VanRenesse""]",,0.9,2,False,Prerequisite: CS 3410 or CS 3420.,SP25,CS,Operating Systems,Operating Systems,0,0
4411,,2025-08-17T17:19:40.431554,"Studies the practical aspects of operating systems through the design and implementation of an operating system kernel that supports multiprogramming, virtual memory, and various input-output devices. All the programming for the project is in a high-level language.",SP25-CS-4411,"[""Robbert VanRenesse"", ""Yu-Ju Huang""]",,0.95,1,False,Corequisite: CS 4410.,SP25,CS,Practicum in Operating Systems,Practicum in Oper Syst,0,0
4450,,2025-08-17T17:19:40.431561,"This course introduces the basic architectural and design principles of computer networking including the design of communication protocols, congestion control, routing and switching, Internet, data center networks and wireless networks.",SP25-CS-4450,"[""Rachit Agarwal""]",,,,,,SP25,CS,Introduction to Computer Networks,Intro to Computer Networks,0,0
4670,,2025-08-17T17:19:40.431567,"An in-depth introduction to computer vision. The goal of computer vision is to compute properties of our world-the 3D shape of an environment, the motion of objects, the names of people or things-through analysis of digital images or videos.  The course covers a range of topics, including 3D reconstruction, image segmentation, object recognition, and vision algorithms fro the Internet, as well as key algorithmic, optimization, and machine learning techniques, such as graph cuts, non-linear least squares, and deep learning.  This course emphasizes hands-on experience with computer vision, and several large programming projects.",SP25-CS-4670,"[""Bharath Hariharan"", ""Wei-Chiu Ma""]",,0.1,5,True,"Prerequisite: CS 2110, CS 2800, MATH 1920 or equivalent and MATH 2310 or MATH 2940 or equivalent.",SP25,CS,Introduction to Computer Vision,Intro to Computer Vision,0,0
4701,,2025-08-17T17:19:40.431628,"Artificial Intelligence project class. Topic choice is student driven and (small) teams are encouraged, but each individual team member must do substantial implementation with significant average weekly time commitment. Possible projects topics include knowledge representation systems, search procedures, game-playing, automated reasoning, machine learning, genetic algorithms, planning, natural language processing, computer vision.",SP25-CS-4701,"[""Kevin Ellis""]",,0.4000000000000001,7,True,"Prerequisite: at least one of the following courses: CS 3700, CS 3780, CS 4670, CS 4740, ECE 4200, ORIE 3741, STSCI 3740, or their equivalents. ",SP25,CS,Practicum in Artificial Intelligence,Prac in A I,0,0
4740,,2025-08-17T17:19:40.431717,"This course constitutes an introduction to natural language processing (NLP), the goal of which is to enable computers to use human languages as input, output, or both. NLP is at the heart of many of today's most exciting technological achievements, including machine translation, question answering and automatic conversational assistants. The course will introduce core problems and methodologies in NLP, including machine learning, problem design, and evaluation methods.",SP25-CS-4740,"[""Claire Cardie"", ""Tanya Goyal""]",,,,,,SP25,CS,Natural Language Processing,Natural Lang Process,0,0
4744,,2025-08-17T17:19:40.431723,"Computational models of natural languages. Topics are drawn from: tree syntax and context free grammar, finite state generative morpho-phonology, feature structure grammars, logical semantics, tabular parsing, Hidden Markov models, categorial and minimalist grammars, text corpora, information-theoretic sentence processing, discourse relations, and pronominal coreference.",SP25-CS-4744,"[""Mats Rooth""]",,0.1,5,True,"Prerequisite: Elementary Python (ex. CS 1133), LING 1101 or CS 2800 or PHIL 2310; for CS majors: Elementary Python and CS 2800.",SP25,CS,Computational Linguistics I,Computational Linguistics I,0,0
4754,,2025-08-17T17:19:40.431781,"This course provides an introduction to human robot interaction. Students will be working alone and in teams to design and examine novel ways for robots to interact with people. In parallel to the design projects students will be introduced to current research on human-robot interaction. Topics include: video interaction analysis, prototyping, and evaluation. This course will require students to re-design a physical robot using basic mechatronics skills with Arduino or similar platforms. Focus of the class will be on designing the interaction with the robot through experimentation with a physical system.",SP25-CS-4754,"[""Malte Jung""]",,0.6000000000000001,1,True,"Prerequisite or corequisite: INFO 4320, or an equivalent mechatronics course, or permission of instructor.",SP25,CS,Re-Designing Robots,Re-Designing Robots,0,0
4756,,2025-08-17T17:19:40.431792,"How do we get robots out of the labs and into the real world with all it's complexities?
Robots must solve two fundamental problems -- (1) Perception: Sense the world using different modalities and (2) Decision making: Act in the world by reasoning over decisions and their consequences. Machine learning promises to solve both problems in a scalable way using data. However, it has fallen short when it comes to robotics.
This course dives deep into robot learning, looks at fundamental algorithms and challenges, and case-studies of real-world applications from self-driving to manipulation.",SP25-CS-4756,"[""Kuan Fang""]","[""Imitation and interactive no-regret learning that handle distribution shifts, exploration/exploitation."", ""Practical reinforcement learning leveraging both model predictive control and model-free methods."", ""Learning perception models using probabilistic inference and 2D/3D deep learning."", ""Frontiers in learning from human feedback (RLHF), planning with LLMs, human motion forecasting and offline reinforcement learning.""]",0.1,9,True,"Prerequisite: CS 2800, probability theory (e.g. BTRY 3080, ECON 3130, MATH 4710, ENGRD 2700), linear algebra (e.g. MATH 2940), calculus (e.g. MATH 1920) , programming proficiency (e.g. CS 2110), and CS 3780 or equivalent or permission of instructor.",SP25,CS,Robot Learning,Robot Learning,0,0
4758,,2025-08-17T17:19:40.431927,"Creating robots capable of performing complex tasks autonomously requires one to address a variety of different challenges such as sensing, perception, control, planning, mechanical design, and interaction with humans. In recent years many advances have been made toward creating such systems, both in the research community (different robot challenges and competitions) and in industry (industrial, military, and domestic robots). This course gives an overview of the challenges and techniques used for creating autonomous mobile robots. Topics include sensing, localization, mapping, path planning, motion planning, obstacle and collision avoidance, and multi-robot control.",SP25-CS-4758,"[""Anastasia Bizyaeva""]","[""Students will be able to understand and implement localization and mapping algorithms using different sensor modalities."", ""Students will be able to generate a path and the motion for a robot moving around an area with obstacles."", ""Students will be able to understand and implement the concepts of different approaches for motion planning such as roadmaps, feedback control, and sampling based methods."", ""Students will be able to apply the tools learned in the class to physical robots.""]",1.0,0,False,Prerequisite: MATLAB programming.,SP25,CS,Autonomous Mobile Robots,Autonomous Mobile Robots,0,0
4782,,2025-08-17T17:19:40.431934,"This class is an introductory course to deep learning. It covers the fundamental principles behind training and inference of deep networks, the specific architecture design choices applicable for different data modalities, discriminative and generative settings, and the ethical and societal implications of such models.",SP25-CS-4782,"[""Kilian Weinberger"", ""Jennifer Sun""]",,0.1,6,True,Prerequisite: CS 2110 or equivalent and CS 3780 or ECE 4200 or STSCI 3740 and CS 1110 or CS 1112.,SP25,CS,Introduction to Deep Learning,Introduction to Deep Learning,0,0
4789,,2025-08-17T17:19:40.432006,Reinforcement Learning is one of the most popular paradigms for modelling interactive learning and sequential decision making in dynamical environments. This course introduces the basics of Reinforcement Learning and the Markov Decision Process. The course will cover algorithms for planning and learning in Markov Decision Processes. We will discuss potential applications of Reinforcement Learning and their implications. We will study and implement classic Reinforcement Learning algorithms.,SP25-CS-4789,"[""Wen Sun""]","[""Identify the differences between Reinforcement Learning and traditional Supervised Learning and grasp the key definitions of Markov Decision Processes."", ""Analyze the performance of the class planning algorithms and learning algorithms for Markov Decision Process."", ""Implement classic algorithms and demonstrate their performance on benchmarks.""]",0.6000000000000001,1,True,Prerequisite: CS 3780 or equivalent.,SP25,CS,Introduction to Reinforcement Learning,Intro Reinforcement Learning,0,0
4810,,2025-08-17T17:19:40.432023,"An introduction to the classical theory of computing: automata theory, formal languages, and effective computability. Topics include finite-state machines, regular languages, regular expressions, grammars, context-free languages, pushdown automata, Turing machines, recursive and recursively enumerable sets, diagonalization, reductions, undecidability, Gödel's incompleteness theorem. A complete list of topics can be found on the schedule page (subject to change). As time permits, we will explore some more modern advances such as coalgebraic methods, abstract interpretation, and concurrency.",SP25-CS-4810,"[""Dexter Kozen""]","[""Formally define deterministic and nondeterministic finite automata (DFAs and NFAs, respectively), regular languages, and the notion of acceptance."", ""Convert NFAs to DFAs using the subset construction."", ""Apply various constructions to produce automata for the intersection, union, and complements of regular sets.""]",0.6000000000000001,1,True,Prerequisite: CS 2800 or permission of instructor.,SP25,CS,Introduction to Theory of Computing,Intro Theory Comp,0,0
4813,,2025-08-17T17:19:40.432039,"Quantum computing is an interdisciplinary field that lies at the intersection of computer science, mathematics, and physics. This computational paradigm relies on principles of quantum mechanics, such as superposition and entanglement, to obtain powerful algorithms. This course aims to provide a self-contained, comprehensive introduction to quantum computing, focusing on the design and analysis of quantum algorithms, as well as covering topics in quantum information and quantum cryptography.",SP25-CS-4813,"[""Nicholas Spooner""]","[""Demonstrate understanding of basic principles of quantum information, such as superposition and entanglement."", ""Conduct analyses of quantum algorithms."", ""Demonstrate understanding of important quantum computing techniques, such as error-correction and fault tolerance.""]",,,,,SP25,CS,Quantum Computing,Quantum Computing,0,0
4820,,2025-08-17T17:19:40.432044,"Develops techniques used in the design and analysis of algorithms, with an emphasis on problems arising in computing applications. Example applications are drawn from systems and networks, artificial intelligence, computer vision, data mining, and computational biology. This course covers four major algorithm design techniques (greedy algorithms, divide-and-conquer, dynamic programming, and network flow), undecidability and NP-completeness, and algorithmic techniques for intractable problems (including identification of structured special cases , approximation algorithms, local search heuristics, and online algorithms).",SP25-CS-4820,"[""Michael Kim""]",,0.6,2,False,"Prerequisite: CS 2800, CS 3110. ",SP25,CS,Introduction to Analysis of Algorithms,Intro Analysis of Algorithms,0,0
4850,,2025-08-17T17:19:40.432064,"Covers the mathematical foundations for access to information. Topics include high dimensional space, random graphs, singular value decomposition, Markov processes, learning theory, and algorithms for massive data.",SP25-CS-4850,"[""Robert Kleinberg""]",,0.7,5,False,"Prerequisite: CS 2800, MATH 1910, MATH 1920, MATH 2210 or MATH 2940.",SP25,CS,"Probability, Vectors, and Matrices in Computing","Prob, Vectors, Matrices in CS",0,0
4852,,2025-08-17T17:19:40.432142,"Networks II builds on its prerequisite course and continues to examine how each of the computing, economic, sociological and natural worlds are connected and how the structure of these connections affects these worlds. In this course, we will construct mathematical models for and analyze networked settings, allowing us to both make predictions about behavior in such systems, as well as reason about how to design such systems to exhibit some desirable behavior. Throughout, we will draw on real-world examples such as social networks, peer-to-peer filesharing, Internet markets, and crowdsourcing, that illustrate these phenomena.",SP25-CS-4852,"[""Cristobal Cheyre Forestier""]",,0.6000000000000001,2,True,"Prerequisite: INFO 2040, CS 2800 or equivalent.",SP25,CS,Networks II: Market Design,Networks II: Market Design,0,0
4997,,2025-08-17T17:19:40.432177,"This independent study course offers CS majors (i.e., undergraduates whose applications to affiliate with the CS major have been approved) an opportunity to reflect on concepts from computer science as they were encountered and applied in a recent internship. Students write a short paper describing their work experience and how it connects to the educational objectives of the computer science major.",SP25-CS-4997,"[""Lillian Lee""]",,,,,,SP25,CS,Practical Training in Computer Science,Practical Training in Comp Sci,0,0
4998,,2025-08-17T17:19:40.432184,Advanced independent work in computer science as part of a student-led team project. ,SP25-CS-4998,"[""Steve Marschner"", ""Karthik Sridharan"", ""Robbert VanRenesse"", ""Walker White"", ""Andrew Myers"", ""Thorsten Joachims"", ""Bharath Hariharan"", ""Rachit Agarwal"", ""Immanuel Trummer""]",,,,,,SP25,CS,Team Projects,Team Projects,0,0
4999,,2025-08-17T17:19:40.432202,Independent reading and research for undergraduates.,SP25-CS-4999,"[""Ziv Scully"", ""Thijs Roumen"", ""Yoav Artzi"", ""Christina Yu"", ""Walker White"", ""Adrian Sampson"", ""Thorsten Joachims"", ""Alexander Rush"", ""Francesca Parise"", ""Hadar Elor"", ""Nicki Dell"", ""Mats Rooth"", ""Christopher De Sa"", ""Thomas Ristenpart"", ""Alexandra Silva"", ""Michael Clarkson"", ""Eva Tardos"", ""Raaz Dwivedi"", ""Rafael Pass"", ""Ken Birman"", ""Andrew Myers"", ""Mark Campbell"", ""Kevin Ellis"", ""Phoebe Sengers"", ""Mark Wilde"", ""Vitaly Shmatikov"", ""Anne Bracy"", ""Kilian Weinberger"", ""Guy Hoffman"", ""Wendy Ju"", ""Cristian Danescu-Niculescu-Mizil"", ""Christina Delimitrou"", ""Ahmed El Alaoui"", ""Curran Muhlberger"", ""Carla Gomes"", ""Susan Fussell"", ""Haym Hirsh"", ""Justin Hsu"", ""Mert Sabuncu"", ""Bob Constable"", ""Serge Belongie"", ""Joe Halpern"", ""Aditya Vashistha"", ""Steve Marschner"", ""David Albonesi"", ""Owolabi Legunsen"", ""John Thickstun"", ""Jose Martinez"", ""Katya Scheinberg"", ""Tapomayukh Bhattacharjee"", ""Kavita Bala"", ""Shimon Edelman"", ""Rachit Agarwal"", ""Abe Davis"", ""Ramin Zabih"", ""Hakim Weatherspoon"", ""Udit Gupta"", ""Alex Conway"", ""Silvia Ferrari"", ""Jon Kleinberg"", ""Volodymyr Kuleshov"", ""Nate Foster"", ""Immanuel Trummer"", ""Christopher Batten"", ""Alex Townsend"", ""Emaad Manzoor"", ""Daniel Lee"", ""Sarah Dean"", ""Malte Jung"", ""Fengqi You"", ""Matthew Eichhorn"", ""Emma Pierson"", ""Nikhil Garg"", ""Hadas Kress-Gazit"", ""Alon Keinan"", ""Sainyam Galhotra"", ""Jennifer Sun"", ""Lillian Lee"", ""Qian Yang"", ""Giulia Guidi"", ""Anil Damle"", ""Karthik Sridharan"", ""Anil Nerode"", ""Fred Schneider"", ""Ari Juels"", ""Bart Selman"", ""Wen Sun"", ""David Matteson"", ""Mohamed Abdelfattah"", ""Robbert VanRenesse"", ""Noah Stephens-Davidowitz"", ""Deborah Estrin"", ""Kirstin Petersen"", ""A. Kevin Tang"", ""David Mimno"", ""Kuan Fang"", ""Greg Morrisett"", ""Jaehee Kim"", ""David Shmoys"", ""Robert Kleinberg"", ""Noah Snavely"", ""Daisy Fan"", ""Aaron Wagner"", ""Paul Ginsparg"", ""Mor Naaman"", ""Dexter Kozen"", ""Shiri Azenkot"", ""Tapan Parikh"", ""Claire Cardie"", ""Rajalakshmi Nandakumar"", ""Florentina Bunea"", ""Haiyuan Yu"", ""Francois Guimbretiere"", ""Zhiru Zhang"", ""Rachee Singh"", ""Kristina Monakhova"", ""Ziv Goldfeld"", ""David Bindel"", ""Donald Greenberg"", ""Jayadev Acharya"", ""David Williamson"", ""Stephen Wicker"", ""Sid Banerjee"", ""Lorenzo Alvisi"", ""Eshan Chattopadhyay"", ""Bharath Hariharan"", ""Tanya Goyal"", ""Marten van Schijndel"", ""Anke van Zuylen"", ""Tanzeem Choudhury"", ""Nathan Kallus"", ""Cheng Zhang"", ""Angelique Taylor"", ""Sanjiban Choudhury""]",,,,,,SP25,CS,Independent Reading and Research,Independent Reading & Research,0,0
5150,,2025-08-17T17:19:40.432208,"Introduction to the practical problems of specifying, designing, building, testing, and delivering reliable software systems. Special topics include professionalism, project management, and the legal framework for software development. As a central part of the course, student teams carry out projects for real clients, using concepts of agile software development. Each project includes all aspects of software development from a feasibility study to final delivery.",SP25-CS-5150,"[""Saikat Dutta""]",,0.6000000000000001,1,True,Prerequisite: CS 2110 or equivalent experience programming in Java or C++.,SP25,CS,Software Engineering,Software Engineering,0,0
5152,,2025-08-17T17:19:40.432222,"Students work in a multidisciplinary team to develop a game that incorporates innovative game technology. Advanced topics include 3D game development, mobile platforms, multiplayer gaming, and nontraditional input devices. There is a special emphasis on developing games that can be submitted to festivals and competitions.",SP25-CS-5152,"[""Walker White""]",,0.7250000000000001,6,False,"Prerequisite: CS 3152, CS 3300 or CS 4620 or CS 3700 or CS 5414. Corequisite: ENGRC 5152.",SP25,CS,Advanced Topics in Computer Game Architecture,Adv Game Architecture,0,0
5223,,2025-08-17T17:19:40.432311,"Introduction to the fundamentals of numerical linear algebra: direct and iterative methods for linear systems, eigenvalue problems, singular value decomposition. In the second half of the course, the above are used to build iterative methods for nonlinear systems and for multivariate optimization. Strong emphasis is placed on understanding the advantages, disadvantages, and limits of applicability for all the covered techniques. Computer programming is required to test the theoretical concepts throughout the course.",SP25-CS-5223,"[""Anil Damle""]",,0.4000000000000001,5,True,"Prerequisite: MATH 2210 or MATH 2940 or equivalent, knowledge of programming, CS 3220 or CS 4210/MATH 4250 or permission of instructor.",SP25,CS,Numerical Analysis: Linear and Nonlinear Problems,Num Analysis: Lin&Nonlin Equat,0,0
5304,,2025-08-17T17:19:40.432375,"Massive amounts of data are collected by many companies and organizations and the task of a data scientist is to extract actionable knowledge from the data – for scientific needs, to improve public health, to promote businesses, for social studies and for various other purposes. This course will focus on the practical aspects of the field and will attempt to provide a comprehensive set of tools for extracting knowledge from data.",SP25-CS-5304,"[""Heejong Kim""]",,,,,,SP25,CS,Data Science in the Wild,Data Science in the Wild,0,0
5342,,2025-08-17T17:19:40.432382,"Trust &amp; Safety is an emerging field that focuses on reducing the harm from interpersonal abuse in digital spaces. The abuse types involved - harassment, misinformation, unwanted sexual content - are often ""lawful but awful,"" requiring developers to build their own socio-technical frameworks of what is appropriate behavior in their platform. In this course, we will look at digital abuse through an analysis of historical incidents. We will study how the field developed standards across algorithmic response, product design and manual removals. Students will join teams to describe an emerging online abuse type, develop appropriate moderation pipelines (e.g., using modern machine learning such as LLMs), and detail associated policies, all in an environment mimicking the realities seen in practice. This course might expose students to disturbing material.",SP25-CS-5342,"[""Thomas Ristenpart"", ""Alexios Mantzarlis""]","[""Recognize common abuse categories as they intersect with modern digital technologies."", ""Analyze the varying levers in the hands of product owners to reduce abuse, including safety-by-design, proactive ranking choices and reactive removals."", ""Recognize the ethical trade-offs behind content moderation decisions in online spaces."", ""Identify emerging risks and make decisions around the correct precision/recall boundaries for a classifier built to detect harmful content.""]",,,,,SP25,CS,"Trust and Safety: Platforms, Policies, Products",Trust and Safety,0,0
5356,,2025-08-17T17:19:40.432385,"This course aims to bridge the gap between academic studies of computer science and production software engineering. The course provides a fast-paced introduction to key tools and techniques that can facilitate the building of prototypes and of actual working systems. It introduces technologies for building Web applications and mobile applications, systems for effective storage of data, and tools that support and ease code writing, such as distributed version-control systems, editors and debuggers.",SP25-CS-5356,"[""Ludwig Schubert""]",,0.9,2,False,Prerequisite: CS 2110 or CS 2112.,SP25,CS,Building Startup Systems,Building Startup Systems,0,0
5410,,2025-08-17T17:19:40.432407,"Introduction to the design of systems programs, with emphasis on multiprogrammed operating systems. Topics include concurrency, synchronization, deadlocks, memory management, protection, input-output methods, networking, file systems and security. The impact of network and distributed computing environments on operating systems is also discussed.",SP25-CS-5410,"[""Robbert VanRenesse""]",,0.9,2,False,Prerequisite: CS 3410 or CS 3420.,SP25,CS,Operating Systems,Operating Systems,0,0
5411,,2025-08-17T17:19:40.432421,"Studies the practical aspects of operating systems through the design and implementation of an operating system kernel that supports multiprogramming, virtual memory, and various input-output devices. All the programming for the project is in a high-level language.",SP25-CS-5411,"[""Robbert VanRenesse"", ""Yu-Ju Huang""]",,0.95,1,False,Corequisite: CS 5410.,SP25,CS,Practicum in Operating Systems,Practicum in Oper Syst,0,0
5430,,2025-08-17T17:19:40.432438,"Surveys security for computers and communications networks, including policy issues (e.g., the national debates on cryptography policy) as well as technical approaches for implementing properties that comprise trustworthiness for a computing system: confidentiality, integrity, availability, and assurance. Discusses cryptographic protocols and other mechanisms for implementing authorization and authentication in hardware and in software. ",SP25-CS-5430,"[""Fred Schneider""]",,0.95,1,False,Prerequisite: CS 4410.,SP25,CS,System Security,System Security,0,0
5433,,2025-08-17T17:19:40.432453,,SP25-CS-5433,"[""Ari Juels""]",,1.0,0,False,"Prerequisite: a good level of programming experience—specifically, the ability to deal with challenging programming tasks—familiarity with common algorithms and data structures, and an understanding of basic concepts in discrete mathematics.",SP25,CS,"Blockchains, Cryptocurrencies, and Smart Contracts",Blockchains & Cryptocurrencies,0,0
5435,,2025-08-17T17:19:40.432458,"This course is a broad overview of modern computer security and digital privacy. It aims to impart technical and social understanding of how and why security and privacy matter, how to think adversarially, and how (and how not) to design secure systems and products. Topics include authentication, Web and mobile security, network, OS, and low-level software security, elements of applied cryptography, privacy protection technologies, censorship resistance, and security and privacy of emerging platforms, illustrated by studying real-world systems and attacks. Key learning objectives include understanding the role of threat modeling in the design and evaluation of modern computing systems, how exploitation of computing systems works, and approaches to finding and remediating vulnerabilities.",SP25-CS-5435,"[""Vitaly Shmatikov""]",,0.6000000000000001,2,True,Prerequisite: CS 2800 or CS 4820 or permission of instructor.,SP25,CS,Security and Privacy Concepts in the Wild,Security & Privacy in the Wild,0,0
5456,,2025-08-17T17:19:40.432473,"This course introduces the basic architectural and design principles of computer networking including the design of communication protocols, congestion control, routing and switching, Internet, data center networks and wireless networks.",SP25-CS-5456,"[""Rachit Agarwal""]",,,,,,SP25,CS,Introduction to Computer Networks,Intro to Computer Networks,0,0
5643,,2025-08-17T17:19:40.432476,"This course introduces students to fundamental physically based modeling techniques used in computer graphics for animation of rigid and deformable solids, virtual characters, fluids and gases, and other systems. Students learn the techniques by implementing a series of interactive computer programs that apply a range of representative simulation methods to simple, primarily 2D systems, and by proposing and implementing a final project.",SP25-CS-5643,"[""Steve Marschner""]",,0.4000000000000001,6,True,"Prerequisite: CS 4620 or equivalent; MATH 1120,  MATH 1920, or equivalent; MATH 2210, MATH 2940, or equivalent; PHYS 1112 or equivalent.",SP25,CS,Physically Based Animation for Computer Graphics,Phys Based Anim for Com Graph,0,0
5670,,2025-08-17T17:19:40.432551,"An in-depth introduction to computer vision. The goal of computer vision is to compute properties of our world - including the 3D shape of an environment, the motion of objects, and the names of things - through analysis of digital images or videos. The course covers a range of topics, including low-level vision, 3D reconstruction, and object recognition, as well as key algorithmic, optimization, and machine learning techniques, including deep learning. This course emphasizes hands-on experience with computer vision and includes several programming projects.",SP25-CS-5670,"[""Bharath Hariharan"", ""Wei-Chiu Ma"", ""Noah Snavely""]",,0.1,5,True,"Prerequisite: CS 2110, CS 2800, MATH 1920 or equivalent and MATH 2310 or MATH 2940 or equivalent (Ithaca only).",SP25,CS,Introduction to Computer Vision,Intro to Computer Vision,0,0
5700,,2025-08-17T17:19:40.432598,"Introduction to major topics in artificial intelligence, including heuristic search, game-playing, knowledge representation and reasoning, planning, probabilistic inference, sequential decision-making and reinforcement learning.",SP25-CS-5700,"[""Kevin Ellis""]",,,,,,SP25,CS,Foundations of AI Reasoning and Decision-Making,AI Reasoning & Decision-Making,0,0
5726,,2025-08-17T17:19:40.432601,"Provides an applied treatment of modern causal inference using machine learning to handle high-dimensionality and nonparametric estimation. Formulates key causal questions in the languages of structural equation modeling and potential outcomes. Presents methods for estimating and constructing confidence intervals on causal and structural parameters using machine learning, including de-biased machine learning, and for learning how to predict heterogeneous treatment effects. Introduces tools from machine learning and deep learning developed for prediction purposes and discusses how to adapt them to causal inference. Emphasizes the applied and practical perspectives with real-world-data examples and assignments. Requires basic knowledge of statistics and machine learning and programming experience in R or Python.",SP25-CS-5726,"[""Nathan Kallus""]",,0.9,2,False,Prerequisite: ORIE 5750 or CS 5785.,SP25,CS,Applied Causal Inference using Machine Learning,Appld Causal Inference ML,0,0
5740,,2025-08-17T17:19:40.432633,"This course constitutes an introduction to natural language processing (NLP), the goal of which is to enable computers to use human languages as input, output, or both. NLP is at the heart of many of today's most exciting technological achievements, including machine translation, automatic conversational assistants and Internet search. The course will introduce core problems and methodologies in NLP, including machine learning, problem design, and evaluation methods. ",SP25-CS-5740,"[""Yoav Artzi"", ""Claire Cardie"", ""Tanya Goyal""]",,,,,,SP25,CS,Natural Language Processing,Natural Language Processing,0,0
5756,,2025-08-17T17:19:40.432641,"How do we get robots out of the labs and into the real world with all it's complexities?
Robots must solve two fundamental problems -- (1) Perception: Sense the world using different modalities and (2) Decision making: Act in the world by reasoning over decisions and their consequences. Machine learning promises to solve both problems in a scalable way using data. However, it has fallen short when it comes to robotics.
This course dives deep into robot learning, looks at fundamental algorithms and challenges, and case-studies of real-world applications from self-driving to manipulation.",SP25-CS-5756,"[""Kuan Fang""]","[""Imitation and interactive no-regret learning that handle distribution shifts, exploration/exploitation."", ""Practical reinforcement learning leveraging both model predictive control and model-free methods."", ""Learning perception models using probabilistic inference and 2D/3D deep learning."", ""Frontiers in learning from human feedback (RLHF), planning with LLMs, human motion forecasting and offline reinforcement learning.""]",0.1,9,True,"Prerequisite: CS 2800, probability theory (e.g. BTRY 3010, ECON 3130, MATH 4710, ENGRD 2700), linear algebra (e.g. MATH 2940), calculus (e.g. MATH 1920), programming proficiency (e.g. CS 2110), and CS 3780 or equivalent or permission of instructor.",SP25,CS,Robot Learning,Robot Learning,0,0
5758,,2025-08-17T17:19:40.432738,"Creating robots capable of performing complex tasks autonomously requires one to address a variety of different challenges such as sensing, perception, control, planning, mechanical design, and interaction with humans. In recent years many advances have been made toward creating such systems, both in the research community (different robot challenges and competitions) and in industry (industrial, military, and domestic robots). This course gives an overview of the challenges and techniques used for creating autonomous mobile robots. Topics include sensing, localization, mapping, path planning, motion planning, obstacle and collision avoidance, and multi-robot control.",SP25-CS-5758,"[""Anastasia Bizyaeva""]","[""Students will be able to understand and implement localization and mapping algorithms using different sensor modalities."", ""Students will be able to generate a path and the motion for a robot moving around an area with obstacles."", ""Students will be able to understand and implement the concepts of different approaches for motion planning such as roadmaps, feedback control, and sampling based methods."", ""Students will be able to apply the tools learned in the class to physical robots.""]",,,,,SP25,CS,Autonomous Mobile Robots,Autonomous Mobile Robots,0,0
5775,,2025-08-17T17:19:40.432744,"This Master's level course will take a hardware-centric view of machine learning systems. From constrained embedded microcontrollers to large distributed multi-GPU systems, we will investigate how these platforms run machine learning algorithms. We will look at different levels of the hardware/software/algorithm stack to make modern machine learning systems possible. This includes understanding different hardware acceleration paradigms, common hardware optimizations such as low-precision arithmetic and sparsity, compilation methodologies, model compression methods such as pruning and distillation, and multi-device federated and distributed training. Through hands-on assignments and an open-ended project, students will develop a holistic view of what it takes to train and deploy a deep neural network.",SP25-CS-5775,"[""Mohamed Abdelfattah""]","[""Understand how machine learning algorithms run on computer systems. This includes both the hardware and the software that maps computations onto the computer chips."", ""Apply key optimization techniques such as pruning, quantization and distillation to machine learning algorithms to improve their efficiency on different hardware platforms."", ""Analyze the performance and efficiency of different hardware platforms with and without optimizations, and understand the impact of efficiency optimizations on the accuracy of a machine learning algorithm."", ""Design both the hardware and software components of a machine learning computer system.""]",1.0,0,False,"Prerequisite: undergraduate ECE/CS degree, programming experience, introductory ML course.",SP25,CS,Machine Learning Hardware and Systems,ML Hardware and Systems,0,0
5780,,2025-08-17T17:19:40.432748,"The course provides an introduction to machine learning, focusing on supervised learning and its theoretical foundations. Topics include: regularized linear models, boosting, kernels, deep networks, generative models, online learning, and ethical questions arising in ML applications.",SP25-CS-5780,"[""Tushaar Gangavarapu"", ""Karthik Sridharan""]",,0.4000000000000001,8,True,"Prerequisite: CS 2800, probability theory (e.g. BTRY 3080, ECON 3130, MATH 4710, ENGRD 2700), linear algebra (e.g. MATH 2940), calculus (e.g. MATH 1920), and programming proficiency (e.g. CS 2110).",SP25,CS,Introduction to Machine Learning,Intro to Machine Learning,0,0
5782,,2025-08-17T17:19:40.432841,"This class is an introductory course to deep learning. It covers the fundamental principles behind training and inference of deep networks, the specific architecture design choices applicable for different data modalities, discriminative and generative settings, and the ethical and societal implications of such models.",SP25-CS-5782,"[""Kilian Weinberger"", ""Jennifer Sun""]","[""Demonstrate the ability to perform neural network training and inference."", ""Identify the correct neural network architecture choices for a given data modality."", ""Implement a working deep learning pipeline for vision and language tasks.""]",0.7,5,False,"Prerequisite: ECE 4200, STSCI 3740, CS 1110, CS 3780, and CS 2110.",SP25,CS,Introduction to Deep Learning,Introduction to Deep Learning,0,0
5789,,2025-08-17T17:19:40.432890,Reinforcement Learning is one of the most popular paradigms for modelling interactive learning and sequential decision making in dynamical environments. This course introduces the basics of Reinforcement Learning and Markov Decision Process. The course will cover algorithms for planning and learning in Markov Decision Processes. We will discuss potential applications of Reinforcement Learning and their implications. We will study and implement classic Reinforcement Learning algorithms.,SP25-CS-5789,"[""Wen Sun""]","[""Identify the differences between Reinforcement Learning and traditional Supervised Learning and grasp the key definitions of Markov Decision Processes."", ""Analyze the performance of the class planning algorithms and learning algorithms for Markov Decision Process."", ""Implement classic algorithms and demonstrate their performance on benchmarks.""]",0.6000000000000001,1,True,Prerequisite: CS 5780 or equivalent.,SP25,CS,Introduction to Reinforcement Learning,Intro Reinforcement Learning,0,0
5820,,2025-08-17T17:19:40.432902,"Develops techniques used in the design and analysis of algorithms, with an emphasis on problems arising in computing applications. Example applications are drawn from systems and networks, artificial intelligence, computer vision, data mining, and computational biology. This course covers four major algorithm design techniques (greedy algorithms, divide-and-conquer, dynamic programming, and network flow), undecidability and NP-completeness, and algorithmic techniques for intractable problems (including identification of structured special cases, approximation algorithms, local search heuristics, and online algorithms).",SP25-CS-5820,"[""Michael Kim""]",,,,,,SP25,CS,Introduction to Analysis of Algorithms,Intro Analysis of Algorithms,0,0
5850,,2025-08-17T17:19:40.432906,"Covers the mathematical foundations for access to information. Topics include high dimensional space, random graphs, singular value decomposition, Markov processes, learning theory, and algorithms for massive data.",SP25-CS-5850,"[""Robert Kleinberg""]",,0.7,5,False,"Prerequisite: CS 2800, MATH 1910, MATH 1920, MATH 2210 or MATH 2940.",SP25,CS,"Probability, Vectors, and Matrices in Computing","Prob, Vectors, Matrices in CS",0,0
5996,,2025-08-17T17:19:40.432960,,SP25-CS-5996,"[""Chris Welty""]",,,,,,SP25,CS,Special Topics in Computer Science,Special Topics in CS,0,0
5998,,2025-08-17T17:19:40.432962,Off-campus internship with industry in which a student gains knowledge and experience in the field of computer science.,SP25-CS-5998,,,,,,,SP25,CS,Master of Engineering Internship,MEng Internship,0,0
5999,,2025-08-17T17:19:40.432975,Independent or group project under the direction of a CS field member or researcher. Projects involve the development of a computer science application (software or hardware) useful in exploring and/or solving an engineering problem with a computer science focus.,SP25-CS-5999,"[""Ziv Scully"", ""Thijs Roumen"", ""Christina Yu"", ""Francesca Parise"", ""Walker White"", ""Adrian Sampson"", ""Thorsten Joachims"", ""Alexander Rush"", ""Yoav Artzi"", ""Hadar Elor"", ""Nicki Dell"", ""Ayham Boucher"", ""Christopher De Sa"", ""Thomas Ristenpart"", ""Rene Kizilcec"", ""Alexandra Silva"", ""Michael Clarkson"", ""Eva Tardos"", ""Raaz Dwivedi"", ""Ken Birman"", ""Andrew Myers"", ""Mark Campbell"", ""Kevin Ellis"", ""Phoebe Sengers"", ""K. Max Zhang"", ""Mark Wilde"", ""Vitaly Shmatikov"", ""Jamol Pender"", ""Anne Bracy"", ""Kilian Weinberger"", ""Guy Hoffman"", ""Wendy Ju"", ""Cristian Danescu-Niculescu-Mizil"", ""Christina Delimitrou"", ""Ahmed El Alaoui"", ""Curran Muhlberger"", ""Carla Gomes"", ""Susan Fussell"", ""Haym Hirsh"", ""Justin Hsu"", ""Mert Sabuncu"", ""Michael Kim"", ""Steve Marschner"", ""David Albonesi"", ""Owolabi Legunsen"", ""Mahdi Boucetta"", ""John Thickstun"", ""Jose Martinez"", ""Katya Scheinberg"", ""Tapomayukh Bhattacharjee"", ""Kavita Bala"", ""Shimon Edelman"", ""Anna Scaglione"", ""Rachit Agarwal"", ""Cafer Avci"", ""Abe Davis"", ""Ramin Zabih"", ""Hakim Weatherspoon"", ""Udit Gupta"", ""Alex Conway"", ""Silvia Ferrari"", ""Jon Kleinberg"", ""Nate Foster"", ""Immanuel Trummer"", ""Volodymyr Kuleshov"", ""Christopher Batten"", ""Alex Townsend"", ""Emaad Manzoor"", ""Daniel Lee"", ""Sarah Dean"", ""Malte Jung"", ""Fengqi You"", ""Matthew Eichhorn"", ""Emma Pierson"", ""Nikhil Garg"", ""Hadas Kress-Gazit"", ""Alon Keinan"", ""Sainyam Galhotra"", ""Jennifer Sun"", ""Lillian Lee"", ""Qian Yang"", ""Giulia Guidi"", ""Anil Damle"", ""Karthik Sridharan"", ""Anil Nerode"", ""Fred Schneider"", ""Ari Juels"", ""Bart Selman"", ""Wen Sun"", ""David Matteson"", ""Mohamed Abdelfattah"", ""Robbert VanRenesse"", ""Noah Stephens-Davidowitz"", ""Kirstin Petersen"", ""A. Kevin Tang"", ""David Mimno"", ""Kuan Fang"", ""Jaehee Kim"", ""David Shmoys"", ""Oliver Gao"", ""Robert Kleinberg"", ""Noah Snavely"", ""Daisy Fan"", ""Aaron Wagner"", ""Paul Ginsparg"", ""Mor Naaman"", ""Dexter Kozen"", ""Shiri Azenkot"", ""Tapan Parikh"", ""Claire Cardie"", ""Rajalakshmi Nandakumar"", ""Florentina Bunea"", ""Haiyuan Yu"", ""Francois Guimbretiere"", ""Zhiru Zhang"", ""Rachee Singh"", ""Kristina Monakhova"", ""David Bindel"", ""Jayadev Acharya"", ""David Williamson"", ""Stephen Wicker"", ""Saikat Dutta"", ""Sid Banerjee"", ""Lorenzo Alvisi"", ""Eshan Chattopadhyay"", ""Bharath Hariharan"", ""Tanya Goyal"", ""Marten van Schijndel"", ""Anke van Zuylen"", ""Nathan Kallus"", ""Tanzeem Choudhury"", ""Cheng Zhang"", ""Angelique Taylor"", ""Sanjiban Choudhury""]",,,,,,SP25,CS,Master of Engineering Project,Master of Engineering Project,0,0
6110,,2025-08-17T17:19:40.432979,"Study of programming paradigms: functional, imperative, concurrent, and probabilistic programming. Mathematical foundations: inductive definitions, fixed points, and formal semantics. Models of programming languages including the lambda calculus. Type systems, polymorphism, modules, and object-oriented constructs. Program transformations, program logic, and applications to programming methodology. ",SP25-CS-6110,"[""Andrew Myers""]",,,,,,SP25,CS,Advanced Programming Languages,Adv Progr Languages,0,0
6120,,2025-08-17T17:19:40.432982,"This is a hands-on course about implementing programming languages. It covers intermediate representations, classic optimization, runtime systems, and more advanced techniques such as parallelization, just-in-time compilation, and garbage collection. Course work consists of reading and discussing both classic and modern research papers and implementation projects based on the LLVM compiler infrastructure.",SP25-CS-6120,"[""Adrian Sampson""]",,0.9,2,False,Prerequisite: CS 4120 or CS 5120.,SP25,CS,Advanced Compilers,Advanced Compilers,0,0
6156,,2025-08-17T17:19:40.433015,"Runtime Verification (RV) is a lightweight formal method for checking program executions against specifications. Foundations, algorithms, and tools for major approaches to RV will be covered, including monitor synthesis, specification languages, parametric monitoring, monitorability, instrumentation, and static analysis for reducing RV overhead. Students will become familiar with recent research results and challenges in RV, gain experience with RV tools, and conduct a research project.",SP25-CS-6156,"[""Owolabi Legunsen""]",,0.9,1,False,Prerequisite: graduate standing in CS or CS majors with CS 3110 grade of B+ or better.,SP25,CS,Runtime Verification,Runtime Verification,0,0
6230,,2025-08-17T17:19:40.433028,"The course will be divided into modules. The course will start with an overview of parallel machines and parallel programming. The course then will cover parallel computing topics in machine learning and deep learning combinatorial scientific computing, heterogeneous parallel programming and architectures, and high-performance domain-specific languages.",SP25-CS-6230,"[""Giulia Guidi""]","[""Describe data parallelism and model parallelism in parallel machine learning, identify such parallelism modes in published work, and implement such parallelism modes yourself."", ""Explain, design, and apply combinatorial techniques, especially in the context of graph analysis challenges, and identify combinatorial approaches in published work."", ""Recognize and describe various heterogeneous parallel computer architectures and their communication characteristics and performance; and explain approaches in published work.""]",,,,,SP25,CS,"Parallel Architectures, Algorithms, and Applications","Parallel Arch, Algo, Apps",0,0
6241,,2025-08-17T17:19:40.433031,"A discussion of numerical methods in the context of data analysis, machine learning, and network science problems. The course will focus on matrix and tensor decompositions, numerical algorithms for graph data, least squares, regression, and iterative methods.",SP25-CS-6241,"[""David Bindel""]",,1.0,0,False,"Prerequisite: strong background in linear algebra, prior exposure to numerical methods.",SP25,CS,Numerical Methods for Data Science,Data Science Numerics,0,0
6386,,2025-08-17T17:19:40.433035,,SP25-CS-6386,"[""Sainyam Galhotra""]",,,,,,SP25,CS,Data to Decisions: Principles of Efficient Data Science,Data to Decisions,0,0
6412,,2025-08-17T17:19:40.433041,"The overall objective of the course is to train students to acquire the skills required to become a faculty member in operating systems. This includes understanding the broader landscape of operating systems and its applications, the ability to give clear presentations on the undergraduate and graduate level, write peer review assessments of research papers, conduct independent research, and write a final research report.  The course focuses on one or more core focus areas within operating systems research, such as storage systems, memory systems, networking, distributed systems or security. Additionally, students conduct an independent research project including a coding demo and produce a written report on their findings.",SP25-CS-6412,"[""Alex Conway""]","[""Present, discuss and critique advanced operating systems research papers in areas such as storage systems, memory systems, networking, distributed systems or security."", ""Conduct independent research in operating systems and synthesize the results into a written report."", ""Analyze and evaluate systems behavior, functionality and performance."", ""Demonstrate best practices for systems evaluation and identify common evaluation pitfalls.""]",,,,,SP25,CS,Advanced Topics in Operating Systems,Adv. Topics in Operating Syst.,0,0
6458,,2025-08-17T17:19:40.433046,"This graduate-level course will systematically explore the fundamentals of optical interconnects in computer systems. The course will discuss the design, implementation and value of optical interconnects of a variety of sizes: long-haul optical interconnects, datacenter-scale optical interconnects and server-scale optical interconnects.",SP25-CS-6458,"[""Rachee Singh""]","[""Explain how long-haul fiber connects planet-scale datacenter deployments."", ""Explain the design and implementation of optically switched datacenters."", ""Explain the design and implementation of optical interconnects within servers."", ""Develop hands-on understanding of these interconnects through class projects that involve data collection of deployed interconnects, systems development leveraging the capabilities of interconnects etc.""]",,,,,SP25,CS,Systems for Programmable Optical Interconnects,Sys Optical Interconnect,0,0
6682,,2025-08-17T17:19:40.433052,"This course will focus on computational tools and methods for content creation in different domains. We will cover methods used in interactive artistic applications (visual arts, film, music, video games) as well as domains where complete automation is the goal (e.g., photometric reconstruction and image-based rendering, data augmentation). The course will involve a mix of lectures given by the instructor and presentations/discussions about research papers that will be assigned to students. Topics will include: different representations of images (e.g., vector and raster graphics), 3D models (e.g., surface manifolds vs volumetric representations), and audio (e.g., time signals vs short-time spectra), as well as parametric control of these representations and their relation to other types of data. A theory or program heavy project will be completed.",SP25-CS-6682,"[""Abe Davis""]","[""Students should learn how to recognize the advantages and disadvantages of different representations for media."", ""Students should demonstrate the ability to analyze and connect ideas from research papers in different domains (e.g., graphics, vision, music information retrieval, hci)."", ""Students should demonstrate a deeper practical understanding of how computation is used for content creation in domains that they pursue through course projects.""]",0.9,3,False,"Prerequisite: Python, MATH 2210, CS 2110, or CS 2112.",SP25,CS,Computation for Content Creation,Computation Content Creation,0,0
6751,,2025-08-17T17:19:40.433091,"Robot manipulation is the ability for a robot to interact physically with objects in the world and manipulate them towards completing a task. It is one of the greatest technical challenges in robotics, due primarily to the interplay of uncertainty about the world and clutter within it. As robots become integrated into complex human environments, robot manipulation is increasingly necessary to assist humans in these unstructured environments. Robotic manipulation will enable applications like personal assistant robots in the home and factory worker robots in advanced manufacturing. This course is a mixture of lectures and paper presentations and covers the fundamental theory, concepts, and systems of robot manipulation, including both software and hardware. Topics we will cover this semester include perception, state estimation, robot arm kinematics and dynamics, task and motion planning, machine learning, controls, human-robot interaction towards various robot manipulation tasks. The course features a semester-long group project in which students propose, formalize, and execute a working robotic manipulation system towards a real-world task. The scope of possible components is quite broad and extends beyond traditional robotics issues into other aspects of CS. This course is offered to prepare a student for Ph.D. research in robot manipulation.",SP25-CS-6751,"[""Tapomayukh Bhattacharjee""]",,1.0,0,False,"Prerequisite: Proficiency in C++ or Python, and familiarity with ROS.",SP25,CS,Robot Manipulation,Robot Manipulation,0,0
6754,,2025-08-17T17:19:40.433098,"As robots move from factory floors and battlefields into homes, offices, schools, and hospitals, how can we build robotic systems made for human interaction?  Course will cover core engineering, computational, and experimental techniques in human-robot interaction (HRI). Lectures will cover key algorithms in Probabilistic Robotics, including Bayesian Networks, Markov Models, HMMs, Kalman and Particle Filters, MDP and POMPD, Supervised Learning, and Reinforcement Learning. Seminal and recent papers in HRI will be discussed, including topics such as: generating intentional action, reasoning about humans, social navigation, teamwork and collaboration, machine learning with humans in the loop, and human-robot dialog. Students will learn methods for designing and analyzing HRI experiments.  Presentation of papers in class, and an HRI-related research project in teams will be required.  Intended for M.Eng to PhD students from multiple disciplines including MAE, CS, ECE and IS.",SP25-CS-6754,"[""Guy Hoffman""]","[""Students will be able to find, read, and comprehend a technical HRI Research Paper."", ""Students will be familiar with the main probabilistic algorithms driving computational HRI."", ""Students will be able to implement a HRI system in ROS."", ""Students will be able to know how to plan and execute a human-subject study and analyze the results of a study using inferential statistics."", ""Students will be proficient at presenting a research paper in a 20-minute conference-style presentation."", ""Students will be able to know how to critically review a paper and comment on its advantages and shortcomings.""]",1.0,0,False,Prerequisite: Python programming experience.,SP25,CS,Human-Robot Interaction: Algorithms and Experiments,Human-Robot Interaction,0,0
6785,,2025-08-17T17:19:40.433104,"Generative models are a class of machine learning algorithms that define probability distributions over complex, high-dimensional objects such as images, sequences, and graphs. Recent advances in deep neural networks and optimization algorithms have significantly enhanced the capabilities of these models and renewed research interest in them. This course explores the foundational probabilistic principles of deep generative models, their learning algorithms, and popular model families, which include variational autoencoders, generative adversarial networks, autoregressive models, and normalizing flows. The course also covers applications in domains such as computer vision, natural language processing, and biomedicine, and draws connections to the field of reinforcement learning.",SP25-CS-6785,"[""John Thickstun""]","[""Describe the probabilistic approach to machine learning, including key issues in modeling, inference, and learning of probabilistic models."", ""Demonstrate knowledge of modern deep generative machine learning algorithms including variational autoencoders, generative adversarial networks, autoregressive models, and normalizing flows."", ""Implement and apply probabilistic and deep generative algorithms to problems and datasets involving images, text, audio, and other modalities."", ""Develop an understanding of state-of-the-art results and open research problems in modern deep generative modeling.""]",0.4000000000000001,4,True,"Prerequisite: CS 2110, MATH 1920, MATH 2940, MATH 4710, or permission of instructor.",SP25,CS,Deep Probabilistic and Generative Models,Deep Generative Models,0,0
6802,,2025-08-17T17:19:40.433154,"A mathematically rigorous course on lattices. Lattices are periodic sets of vectors in high-dimensional space. They play a central role in modern cryptography, and they arise naturally in the study of high-dimensional geometry (e.g., sphere packings). We will study lattices as both geometric and computational objects. Topics include Minkowski's celebrated theorem, the famous LLL algorithm for finding relatively short lattice vectors, Fourier-analytic methods, basic cryptographic constructions, and modern algorithms for finding shortest lattice vectors. We may also see connections to algebraic number theory.",SP25-CS-6802,"[""Noah Stephens-Davidowitz""]","[""Demonstrate algorithmic techniques such as basis reduction and sieving."", ""Identify Regev's lattice-based public-key encryption scheme."", ""Understand how Fourier-analytic methods can be used to study the geometry of lattices.""]",0.6000000000000001,1,True,Prerequisite: MATH 4310 or permission of instructor.,SP25,CS,"Lattices: Geometry, Cryptography, and Algorithms",Lattices,0,0
6816,,2025-08-17T17:19:40.433173,"Meta-complexity refers to the computational complexity of problems that are themselves about computations and their complexity. Such problems include the Minimum Circuit Size Problem and the Time-bounded Kolmogorov Complexity Problem, the study of which originated in the 1950s/60s and predate the modern study of Complexity theory. Meta-complexity provides a unifying framework for a variety of central tasks in several areas of computer science, including computational complexity, cryptography, and learning theory, and there has been a recent explosion of works connecting these areas through the lens of Meta-complexity. In this course, we will focus on these recent development, with a particular focus on connections with Cryptography.",SP25-CS-6816,"[""Rafael Pass""]","[""Describe classic problems, concepts, and key results, in meta-complexity."", ""Analyze algorithms and cryptographic schemes related to meta-complexity."", ""Explain reductions between meta-complexity and cryptographic problems.""]",,,,,SP25,CS,Meta-Complexity and Cryptography,Meta-Complexity,0,0
6817,,2025-08-17T17:19:40.433177,"This course will focus on the 'Analysis of Boolean Functions' with the objective to unravel properties of Boolean functions by studying their Fourier spectra. The harmonic analysis of Boolean functions has become a powerful tool in theoretical computer science, leading to groundbreaking results in various areas such as social choice theory, hardness of approximation, learning theory, pseudorandomness, property testing and circuit complexity. In fact, the tools developed in this area have found key applications beyond computer science, in particular leading to key developments in areas of random graphs, statistical physics, combinatorics and metric spaces. The course will aim to provide an in-depth introduction to this field of study.",SP25-CS-6817,"[""Eshan Chattopadhyay"", ""Amy Elser""]",,0.95,1,False,Prerequisite: CS 4820.,SP25,CS,Special Topics in Complexity Theory,Topics in Complexity Theory,0,0
7090,,2025-08-17T17:19:40.433189,Weekly meeting for the discussion and study of important topics in the field.,SP25-CS-7090,"[""Lorenzo Alvisi""]",,,,,,SP25,CS,Computer Science Colloquium,Computer Science Colloquium,0,0
7190,,2025-08-17T17:19:40.433192,"The Programming Languages Discussion Group meets weekly to discuss papers in the area of programming languages, program analysis, and compilers. The goal is to encourage interactions and discussions between students, researchers, and faculty with interests in this area. The seminar is open to everybody interested in languages and compilers. First-year and second-year students are especially encouraged to participate.",SP25-CS-7190,"[""Adrian Sampson""]",,0.6000000000000001,1,True,Prerequisite: CS 6110 or permission of instructor.,SP25,CS,Seminar in Programming Languages,Sem in Prog Lang and Compilers,0,0
7290,,2025-08-17T17:19:40.433207,"Talks on various methods in scientific computing, the analysis of their convergence properties and computational efficiency, and their adaptation to specific applications.",SP25-CS-7290,"[""Alex Townsend"", ""Anil Damle""]",,,,,,SP25,CS,Seminar on Scientific Computing and Numerics,Scientific Computing Seminar,0,0
7390,,2025-08-17T17:19:40.433211,The database seminar is the weekly meeting of students and faculty interested in data management and data mining at Cornell. We typically discuss one or two papers on related topics per session. We focus on recent and seminal papers of general interest.,SP25-CS-7390,"[""Sainyam Galhotra"", ""Immanuel Trummer""]",,,,,,SP25,CS,Database Seminar,Seminar in Database Systems,0,0
7490,,2025-08-17T17:19:40.433214,"The Systems Research Seminar discusses recent, interesting papers in the systems area, broadly defined to span operating systems, distributed systems, networking, architecture, databases, security, and programming languages. The goal is to foster technical discussions among the Cornell systems research community.",SP25-CS-7490,"[""Alex Conway"", ""Lorenzo Alvisi""]",,,,,,SP25,CS,Systems Research Seminar,Syst Res Seminar,0,0
7690,,2025-08-17T17:19:40.433217,The Graphics/Vision Research Seminar discusses recent research in the areas of computer graphics and computer vision. The goal is to foster technical discussions and collaboration among the Cornell graphics and vision research community.,SP25-CS-7690,"[""Bharath Hariharan"", ""Noah Snavely"", ""Steve Marschner"", ""Abe Davis""]",,,,,,SP25,CS,Computer Graphics and Vision Seminar,Graphics and Vision Seminar,0,0
7790,,2025-08-17T17:19:40.433221,"The AI seminar will meet weekly for lectures by graduate students, faculty, and researchers emphasizing work-in-progress and recent results in AI research.",SP25-CS-7790,"[""Kilian Weinberger""]",,,,,,SP25,CS,Seminar in Artificial Intelligence,Seminar in Artificial Intell.,0,0
7794,,2025-08-17T17:19:40.433224,"This course, the NLP seminar, is a weekly meeting for people currently or soon to be actively doing research in NLP. (Students simply looking to learn more about NLP should not enroll, but should take one of our lecture courses instead.) One participant leads discussion each week, either of a recently published paper or of their own work in progress.",SP25-CS-7794,"[""Marten van Schijndel"", ""Yoav Artzi"", ""Lillian Lee""]",,,,,,SP25,CS,Seminar in Natural Language Understanding,Sem in Natural Lang Understndg,0,0
7796,,2025-08-17T17:19:40.433228,Informal seminar in which current topics in robotics are discussed.,SP25-CS-7796,"[""Kuan Fang"", ""Sanjiban Choudhury"", ""Tapomayukh Bhattacharjee""]",,,,,,SP25,CS,Robotics Seminar,Robotics Seminar,0,0
7890,,2025-08-17T17:19:40.433231,"The theory seminar will meet weekly for lectures by graduate students, faculty, and researchers emphasizing work-in-progress and recent results related to theory of computing.",SP25-CS-7890,"[""Noah Stephens-Davidowitz"", ""Eshan Chattopadhyay""]",,,,,,SP25,CS,Seminar in Theory of Algorithms and Computing,Sem Theory of Alg & Comp,0,0
7999,,2025-08-17T17:19:40.433247,Independent research for CS PhD students who have not yet passed their A-exam.,SP25-CS-7999,"[""Ziv Scully"", ""Thijs Roumen"", ""Christina Yu"", ""Francesca Parise"", ""Walker White"", ""Adrian Sampson"", ""Thorsten Joachims"", ""Alexander Rush"", ""Yoav Artzi"", ""Nicki Dell"", ""Christopher De Sa"", ""Thomas Ristenpart"", ""Rene Kizilcec"", ""Alexandra Silva"", ""Michael Clarkson"", ""Eva Tardos"", ""Raaz Dwivedi"", ""Rafael Pass"", ""Ken Birman"", ""Andrew Myers"", ""Harald Haraldsson"", ""Mark Campbell"", ""Kevin Ellis"", ""Phoebe Sengers"", ""Mark Wilde"", ""Vitaly Shmatikov"", ""Anne Bracy"", ""Kilian Weinberger"", ""Guy Hoffman"", ""Wendy Ju"", ""Cristian Danescu-Niculescu-Mizil"", ""Ahmed El Alaoui"", ""Carla Gomes"", ""Haym Hirsh"", ""Justin Hsu"", ""Mert Sabuncu"", ""Serge Belongie"", ""Nicholas Spooner"", ""Joe Halpern"", ""Michael Kim"", ""Steve Marschner"", ""David Albonesi"", ""Owolabi Legunsen"", ""Jose Martinez"", ""Katya Scheinberg"", ""Tapomayukh Bhattacharjee"", ""Kavita Bala"", ""Shimon Edelman"", ""Rachit Agarwal"", ""Abe Davis"", ""Ramin Zabih"", ""Hakim Weatherspoon"", ""Udit Gupta"", ""Alex Conway"", ""Silvia Ferrari"", ""Jon Kleinberg"", ""Nate Foster"", ""Volodymyr Kuleshov"", ""Immanuel Trummer"", ""Christopher Batten"", ""Alex Townsend"", ""Emaad Manzoor"", ""Daniel Lee"", ""Sarah Dean"", ""Malte Jung"", ""Fengqi You"", ""Matthew Eichhorn"", ""Emma Pierson"", ""Nikhil Garg"", ""Hadas Kress-Gazit"", ""Sainyam Galhotra"", ""Lillian Lee"", ""Qian Yang"", ""Giulia Guidi"", ""Anil Damle"", ""Karthik Sridharan"", ""Anil Nerode"", ""Fred Schneider"", ""Ari Juels"", ""Bart Selman"", ""Wen Sun"", ""David Matteson"", ""Mohamed Abdelfattah"", ""Robbert VanRenesse"", ""Allison Koenecke"", ""Noah Stephens-Davidowitz"", ""Deborah Estrin"", ""Paul Golz"", ""Kirstin Petersen"", ""A. Kevin Tang"", ""David Mimno"", ""Kuan Fang"", ""David Shmoys"", ""Robert Kleinberg"", ""Noah Snavely"", ""Aaron Wagner"", ""Mor Naaman"", ""Dexter Kozen"", ""Shiri Azenkot"", ""Tapan Parikh"", ""Claire Cardie"", ""Rajalakshmi Nandakumar"", ""Florentina Bunea"", ""Haiyuan Yu"", ""Francois Guimbretiere"", ""Zhiru Zhang"", ""Rachee Singh"", ""Kristina Monakhova"", ""Ziv Goldfeld"", ""David Bindel"", ""Donald Greenberg"", ""Jayadev Acharya"", ""David Williamson"", ""Stephen Wicker"", ""Saikat Dutta"", ""Sid Banerjee"", ""Lorenzo Alvisi"", ""Eshan Chattopadhyay"", ""Bharath Hariharan"", ""Tanya Goyal"", ""Marten van Schijndel"", ""Anke van Zuylen"", ""Tanzeem Choudhury"", ""Nathan Kallus"", ""Cheng Zhang"", ""Angelique Taylor"", ""Sanjiban Choudhury""]",,,,,,SP25,CS,Independent Research,Independent Research,0,0
1006,,2025-08-17T17:19:40.433250,"Reviews material presented in MATH 1106 lectures, provides problem-solving techniques and tips as well as prelim review. Provides further instruction for students who need reinforcement. Not a substitute for attending MATH 1106 lectures or discussions.",SP25-MATH-1006,"[""Doug Knowles""]",,0.95,1,False,Corequisite: MATH 1106.,SP25,MATH,Academic Support for MATH 1106,Academic Support for Math 1106,0,0
1011,,2025-08-17T17:19:40.433255,"Reviews material presented in MATH 1110 lectures, provides problem-solving techniques and tips as well as prelim review. Provides further instruction for students who need reinforcement. Not a substitute for attending MATH 1110 lectures or discussions.",SP25-MATH-1011,"[""Doug Knowles""]",,0.95,1,False,Corequisite: MATH 1110.,SP25,MATH,Academic Support for MATH 1110,Academic Support for Math 1110,0,0
1012,,2025-08-17T17:19:40.433259,"Reviews material presented in MATH 1120 lectures, provides problem-solving techniques and tips as well as prelim review. Provides further instruction for students who need reinforcement. Not a substitute for attending MATH 1120 lectures or discussions.",SP25-MATH-1012,"[""Melanie Fraser""]",,0.95,1,False,Corequisite: MATH 1120.,SP25,MATH,Academic Support for MATH 1120,Academic Support for Math 1120,0,0
1021,,2025-08-17T17:19:40.433263,"Reviews material presented in MATH 2210 lectures, provides problem-solving techniques and tips as well as prelim review. Provides further instruction for students who need reinforcement. Not a substitute for attending MATH 2210 lectures or discussions.",SP25-MATH-1021,"[""Melanie Fraser""]",,0.95,1,False,Corequisite: MATH 2210.,SP25,MATH,Academic Support for MATH 2210,Academic Support for MATH 2210,0,0
1106,,2025-08-17T17:19:40.433267,"The goal of this course is to give students a strong basis in some quantitative skills needed in the life and social sciences. There will be an emphasis on modeling, using fundamental concepts from calculus developed in the course, including: derivatives, integrals, and introductory differential equations. Examples from the life sciences are used throughout the course. To give a concrete example, we will study predator-prey populations. We will write down mathematical models that describe the evolution of these populations, analyze both quantitative and qualitative properties to make predictions about the future of these populations, and discuss the assumptions and limitations of the models. Note that while we will cover the topics of derivatives and integrals, this course has a different, much more applied, focus from courses such as MATH 1110 or a typical high school calculus course.",SP25-MATH-1106,"[""Marie MacDonald"", ""Kelly Pohland""]",,,,,,SP25,MATH,Modeling with Calculus for the Life Sciences,Modeling with Calculus,0,0
1110,,2025-08-17T17:19:40.433271,"Topics include functions and graphs, limits and continuity, differentiation and integration of algebraic, trigonometric, inverse trig, logarithmic, and exponential functions; applications of differentiation, including graphing, max-min problems, tangent line approximation, implicit differentiation, and applications to the sciences; the mean value theorem; and antiderivatives, definite and indefinite integrals, the fundamental theorem of calculus, and the area under a curve.",SP25-MATH-1110,"[""Yael Eisenberg"", ""Kihoon Seong"", ""Harry Fluck"", ""Anton Mosunov"", ""Mary Ann Huntley"", ""Hosea Wondo""]",,,,,,SP25,MATH,Calculus I,Calculus I,0,0
1120,,2025-08-17T17:19:40.433275,"Focuses on integration: applications, including volumes and arc length; techniques of integration, approximate integration with error estimates, improper integrals, differential equations and their applications. Also covers infinite sequences and series: definition and tests for convergence, power series, Taylor series with remainder, and parametric equations.",SP25-MATH-1120,"[""Ajeet Kumar"", ""Luke Serafin"", ""Irena Peeva"", ""Gabriella Torres Nothaft"", ""Mikolaj Sierzega""]",,0.6000000000000001,2,True,"Prerequisite: MATH 1110, excellent performance in MATH 1106, or equivalent AP credit.",SP25,MATH,Calculus II,Calculus II,0,0
1340,,2025-08-17T17:19:40.433306,We apply mathematical reasoning to problems arising in the social sciences. We discuss game theory and its applications to questions of governing and the analysis of political conflicts. The problem of finding fair election procedures to choose among three or more alternatives is analyzed.,SP25-MATH-1340,"[""Matthew Haulmark""]",,,,,,SP25,MATH,"Strategy, Cooperation, and Conflict","Strategy, Cooperation&Conflict",0,0
1910,,2025-08-17T17:19:40.433309,"Essentially a second course in calculus. Topics include techniques of integration, finding areas and volumes by integration, exponential growth, partial fractions, infinite sequences and series, tests of convergence, and power series.",SP25-MATH-1910,"[""Timothy Healey""]",,,,,,SP25,MATH,Calculus for Engineers,Calculus for Engineers,0,0
1920,,2025-08-17T17:19:40.433313,"Introduction to multivariable calculus. Topics include partial derivatives, double and triple integrals, line and surface integrals, vector fields, Green's theorem, Stokes' theorem, and the divergence theorem.",SP25-MATH-1920,"[""Kelly Delp"", ""Sergio Chaves""]",,0.6000000000000001,1,True,Prerequisite: MATH 1910 or equivalent AP credit.,SP25,MATH,Multivariable Calculus for Engineers,Multivariable Calculus Engrs,0,0
2210,,2025-08-17T17:19:40.433331,"Topics include vector algebra, linear transformations, matrices, determinants, orthogonality, eigenvalues, and eigenvectors. Applications are made to linear differential or difference equations. The lectures introduce students to formal proofs. Students are required to produce some proofs in their homework and on exams.",SP25-MATH-2210,"[""Benjamin Dozier""]",,0.6000000000000001,2,True,"Prerequisite: MATH 1110-MATH 1120 with high performance, equivalent AP credit, or permission of department.",SP25,MATH,Linear Algebra,Linear Algebra,0,0
2220,,2025-08-17T17:19:40.433362,"Differential and integral calculus of functions in several variables, line and surface integrals as well as the theorems of Green, Stokes, and Gauss.",SP25-MATH-2220,"[""Justin Moore""]",,0.95,1,False,Prerequisite: MATH 2210.,SP25,MATH,Multivariable Calculus,Multivariable Calculus,0,0
2240,,2025-08-17T17:19:40.433380,"Topics include vector fields; line integrals; differential forms and exterior derivative; work, flux, and density forms; integration of forms over parametrized domains; and Green's, Stokes', and divergence theorems.",SP25-MATH-2240,"[""Jason Manning""]",,0.95,1,False,Prerequisite: MATH 2230.,SP25,MATH,Theoretical Linear Algebra and Calculus,Theory:Linear Algebra/Calculus,0,0
2310,,2025-08-17T17:19:40.433401,"An introduction to linear algebra for students interested in applications to data science. The course diverges from traditional linear algebra courses by emphasizing data science applications while teaching similar concepts. Key topics include matrices as data tables, high-dimensional datasets, singular value decomposition for data compression, and linear transformations in computer graphics.",SP25-MATH-2310,"[""Alex Townsend""]",,0.6000000000000001,2,True,"Prerequisite: MATH 1106, MATH 1110, or equivalent AP credit.",SP25,MATH,Linear Algebra for Data Science,Linear Algebra for DataScience,0,0
2930,,2025-08-17T17:19:40.433432,"Introduction to ordinary and partial differential equations. Topics include: first-order equations (separable, linear, homogeneous, exact); mathematical modeling (e.g., population growth, terminal velocity); qualitative methods (slope fields, phase plots, equilibria, and stability); numerical methods; second-order equations (method of undetermined coefficients, application to oscillations and resonance, boundary-value problems and eigenvalues); and Fourier series. A substantial part of this course involves partial differential equations, such as the heat equation, the wave equation, and Laplace's equation. (This part must be present in any outside course being considered for transfer credit to Cornell as a substitute for MATH 2930.)",SP25-MATH-2930,"[""David Freund""]",,0.95,1,False,Prerequisite: MATH 1920.,SP25,MATH,Differential Equations for Engineers,Differential Equations Engrs,0,0
2940,,2025-08-17T17:19:40.433450,"Linear algebra and its applications. Topics include: matrices, determinants, vector spaces, eigenvalues and eigenvectors, orthogonality and inner product spaces; applications include brief introductions to difference equations, Markov chains, and systems of linear ordinary differential equations. May include computer use in solving problems.",SP25-MATH-2940,"[""Frans Schalekamp""]",,0.95,1,False,Prerequisite: MATH 1920.,SP25,MATH,Linear Algebra for Engineers,Linear Algebra for Engineers,0,0
3040,,2025-08-17T17:19:40.433469,"In mathematics, the methodology of proof provides a central tool for confirming the validity of mathematical assertions, functioning much as the experimental method does in the physical sciences. In this course, students learn various methods of mathematical proof, starting with basic techniques in propositional and predicate calculus and in set theory and combinatorics, and then moving to applications and illustrations of these via topics in one or more of the three main pillars of mathematics: algebra, analysis, and geometry. Since cogent communication of mathematical ideas is important in the presentation of proofs, the course emphasizes clear, concise exposition.",SP25-MATH-3040,"[""Anil Nerode"", ""Inhyeok Choi""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent.",SP25,MATH,Prove It!,Prove It!,0,0
3110,,2025-08-17T17:19:40.433532,"Provides a transition from calculus to real analysis. Topics include rigorous treatment of fundamental concepts in calculus: including limits and convergence of sequences and series, compact sets; continuity, uniform continuity and differentiability of functions. Emphasis is placed upon understanding and constructing mathematical proofs.",SP25-MATH-3110,"[""Timothy Riley""]",,0.1,7,True,"Prerequisite: a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Introduction to Analysis,Introduction to Analysis,0,0
3320,,2025-08-17T17:19:40.433643,"An introductory course on number theory, the branch of algebra that studies the deeper properties of integers and their generalizations. Usually includes most of the following topics: the Euclidean algorithm, continued fractions, Pythagorean triples, Diophantine equations such as Pell's equation, congruences, quadratic reciprocity, binary quadratic forms, Gaussian integers, and factorization in quadratic number fields. May include a brief introduction to Fermat's Last Theorem.",SP25-MATH-3320,"[""Dan Barbasch""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent.",SP25,MATH,Introduction to Number Theory,Introduction to Number Theory,0,0
3340,,2025-08-17T17:19:40.433706,"An introduction to structures of abstract algebra, including groups, rings, fields, factorization of polynomials and integers, congruences, and the structure of finite abelian groups. Additional topics include modules over Euclidean domain and Sylow theorems.",SP25-MATH-3340,"[""Rachel Webb""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent.",SP25,MATH,Abstract Algebra,Abstract Algebra,0,0
3360,,2025-08-17T17:19:40.433812,"Introduction to the concepts and methods of abstract algebra that are of interest in applications. Covers the basic theory of groups, rings and fields and their applications to such areas as public-key cryptography and error-correcting codes. Applications include the RSA cryptosystem and use of finite fields to construct error-correcting codes. Topics include elementary number theory, Euclidean algorithm, prime factorization, congruences, theorems of Fermat and Euler, elementary group theory, Chinese remainder theorem, factorization in the ring of polynomials, and classification of finite fields.",SP25-MATH-3360,"[""Karola Meszaros""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent.",SP25,MATH,Applicable Algebra,Applicable Algebra,0,0
4030,,2025-08-17T17:19:40.433894,"Development of mathematics from Babylon and Egypt and the Golden Age of Greece through its nineteenth century renaissance in the Paris of Cauchy and Lagrange and the Berlin of Weierstrass and Riemann. Covers basic algorithms underlying algebra, analysis, number theory, and geometry in historical order. Theorems and exercises cover the impossibility of duplicating cubes and trisecting angles, which regular polygons can be constructed by ruler and compass, the impossibility of solving the general fifth degree algebraic equation by radicals, the transcendence of pi. Students give presentations from original sources over 5000 years of mathematics.",SP25-MATH-4030,"[""Anil Nerode""]",,1.0,0,True,"Prerequisite: two mathematics courses above 3000, or permission of instructor.",SP25,MATH,History of Mathematics,History of Mathematics,0,0
4130,,2025-08-17T17:19:40.433900,"Introduction to the rigorous theory underlying calculus, covering the real number system and functions of one variable. Based entirely on proofs. The student is expected to know how to read and, to some extent, construct proofs before taking this course. Topics typically include construction of the real number system, properties of the real number system, continuous functions, differential and integral calculus of functions of one variable, sequences and series of functions.",SP25-MATH-4130,"[""Slawomir Solecki""]",,0.1,7,True,"Prerequisite: high level of performance in a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Honors Introduction to Analysis I,Honors Intro Analysis I,0,0
4140,,2025-08-17T17:19:40.434029,"Proof-based introduction to further topics in analysis. Topics may include the Lebesgue measure and integration, functions of several variables, differential calculus, implicit function theorem, infinite dimensional normed and metric spaces, Fourier series, ordinary differential equations.",SP25-MATH-4140,"[""Xin Zhou""]",,0.95,1,False,Prerequisite: MATH 4130.,SP25,MATH,Honors Introduction to Analysis II,Honors Intro Analysis II,0,0
4180,,2025-08-17T17:19:40.434052,"Theoretical and rigorous introduction to complex variable theory. Topics include complex numbers, differential and integral calculus for functions of a complex variable including Cauchy's theorem and the calculus of residues, elements of conformal mapping.",SP25-MATH-4180,"[""Chun Pong Chu""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2230-MATH 2240, MATH 3110, or MATH 4130, or permission of instructor.",SP25,MATH,Complex Analysis,Complex Analysis,0,0
4200,,2025-08-17T17:19:40.434135,"Covers ordinary differential equations in one and higher dimensions: qualitative, analytic, and numerical methods. Emphasis is on differential equations as models and the implications of the theory for the behavior of the system being modeled and includes an introduction to bifurcations.",SP25-MATH-4200,"[""John Hubbard""]",,0.1,7,True,"Prerequisite: a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Differential Equations and Dynamical Systems,Diff Eqs & Dynamical Systems,0,0
4260,,2025-08-17T17:19:40.434266,"Introduction to the fundamentals of numerical linear algebra: direct and iterative methods for linear systems, eigenvalue problems, singular value decomposition. In the second half of the course, the above are used to build iterative methods for nonlinear systems and for multivariate optimization. Strong emphasis is placed on understanding the advantages, disadvantages, and limits of applicability for all the covered techniques. Computer programming is required to test the theoretical concepts throughout the course.",SP25-MATH-4260,"[""Anil Damle""]",,0.4000000000000001,5,True,"Prerequisite: MATH 2210 or MATH 2940 or equivalent, knowledge of programming, CS 3220 or CS 4210/MATH 4250, or permission of the instructor. ",SP25,MATH,Numerical Analysis: Linear and Nonlinear Problems,Num Analysis: Lin&Nonlin Equat,0,0
4280,,2025-08-17T17:19:40.434373,"Topics are selected from first-order quasilinear equations, classification of second-order equations, with emphasis on maximum principles, existence, uniqueness, stability, Fourier series methods. Additional topics as time permits.",SP25-MATH-4280,"[""Alexander Vladimirsky""]",,0.6000000000000001,2,True,"Prerequisite: MATH 2930, MATH 3270, or equivalent.",SP25,MATH,Introduction to Partial Differential Equations,Intro Partial Diff Equations,0,0
4310,,2025-08-17T17:19:40.434432,"Introduction to linear algebra, including the study of vector spaces, linear transformations, matrices, and systems of linear equations. Additional topics are quadratic forms and inner product spaces, canonical forms for various classes of matrices and linear transformations.",SP25-MATH-4310,"[""Andreea Iorga""]",,0.4000000000000001,4,True,"Prerequisite: MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent.",SP25,MATH,Linear Algebra,Linear Algebra,0,0
4340,,2025-08-17T17:19:40.434517,"Honors version of a course in abstract algebra, which treats the subject from an abstract and axiomatic viewpoint, including universal mapping properties. Topics include groups, groups acting on sets, Sylow theorems; rings, Euclidean domains, factorization, structure theorem of finitely generated modules over a principal ideal domain; fields, root adjunction, finite fields, introduction to Galois theory. The course emphasizes understanding the theory with proofs in both homework and exams.",SP25-MATH-4340,"[""Martin Kassabov""]",,0.95,1,False,Prerequisite: MATH 4330.,SP25,MATH,Honors Introduction to Algebra,Honors Introduction to Algebra,0,0
4500,,2025-08-17T17:19:40.434545,"An introduction to a topic that is central to mathematics and important in physics and engineering. The objects of study are certain classes of matrices, such as orthogonal, unitary, or symplectic matrices. These classes have both algebraic structure (groups) and geometric/topological structure (manifolds). Thus the course will be a mixture of algebra and geometry/topology, with a little analysis as well. The topics will include Lie algebras (which are an extension of the notion of vector multiplication in three-dimensional space), the exponential mapping (a generalization of the exponential function of calculus), and representation theory (which studies the different ways in which groups can be represented by matrices). Concrete examples will be emphasized. Background not included in the prerequisites will be developed as needed.",SP25-MATH-4500,"[""James West""]",,0.1,7,True,"Prerequisite: a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Matrix Groups,Matrix Groups,0,0
4540,,2025-08-17T17:19:40.434687,"Differential geometry involves using calculus to study geometric concepts such as curvature and geodesics. This introductory course focuses on the differential geometry of curves and surfaces. It may also touch upon the higher-dimensional generalizations, Riemannian manifolds, which underlie the study of general relativity.",SP25-MATH-4540,"[""Xiaodong Cao""]",,0.1,7,True,"Prerequisite: a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Introduction to Differential Geometry,Intro to Differential Geometry,0,0
4710,,2025-08-17T17:19:40.434810,"Introduction to probability theory, which prepares the student to take MATH 4720. The course begins with basics: combinatorial probability, mean and variance, independence, conditional probability, and Bayes formula. Density and distribution functions and their properties are introduced. The law of large numbers and the central limit theorem are stated and their implications for statistics are discussed.",SP25-MATH-4710,"[""Laurent Saloff-Coste""]",,0.6000000000000001,2,True,"Prerequisite: MATH 1110-MATH 1120, or equivalent.",SP25,MATH,Basic Probability,Basic Probability,0,0
4720,,2025-08-17T17:19:40.434847,"Statistics have proved to be an important research tool in nearly all of the physical, biological, and social sciences. This course serves as an introduction to statistics for students who already have some background in calculus, linear algebra, and probability theory. Topics include parameter estimation, hypothesis testing, and linear regression. The course emphasizes both the mathematical theory of statistics and techniques for data analysis that are useful in solving scientific problems.",SP25-MATH-4720,"[""Marten Wegkamp""]",,0.1,5,True,"Prerequisite: MATH 4710 and linear algebra (MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent).",SP25,MATH,Statistics,Statistics,0,0
4740,,2025-08-17T17:19:40.434938,"A one-semester introduction to stochastic processes which develops the theory together with applications. The course will always cover Markov chains in discrete and continuous time and Poisson processes. Depending upon the interests of the instructor and the students, other topics may include queuing theory, martingales, Brownian motion, and option pricing.",SP25-MATH-4740,"[""Sungwoo Jeong""]",,0.1,10,True,"Prerequisite: MATH 4710, BTRY 3080/ILRST 3080/STSCI 3080, ORIE 3500, or ECON 3130 and linear algebra (MATH 2210, MATH 2230, MATH 2310, MATH 2940, or equivalent).",SP25,MATH,Stochastic Processes,Stochastic Processes,0,0
4900,,2025-08-17T17:19:40.435132,An independent research course by arrangement with an individual professor.  The goal is for the student to perform an independent investigation into a specific mathematical question.  The student and professor will set expectations and grading policies at the beginning of the term.,SP25-MATH-4900,"[""Camil Muscalu"", ""Benjamin Dozier"", ""Tara Holm"", ""Inna Zakharevich"", ""David Zywina"", ""Alex Betts"", ""Philippe Sosoe"", ""Daniel Halpern-Leistner"", ""Yunan Yang"", ""Daniel Stern"", ""Xin Zhou"", ""Justin Moore"", ""Marten Wegkamp"", ""Ravi Ramakrishna"", ""Yuri Berest"", ""Jason Manning"", ""Rachel Webb"", ""Marcelo Aguiar"", ""Lionel Levine"", ""Anil Nerode"", ""Ed Swartz"", ""Irena Peeva"", ""Nicolas Templier"", ""Reyer Sjamaar"", ""Robert Connelly"", ""Timothy Riley"", ""Michael Stillman"", ""Kathryn Mann"", ""James West"", ""Alexander Vladimirsky"", ""Martin Kassabov"", ""Laurent Saloff-Coste"", ""Yusheng Luo"", ""Timothy Healey"", ""Xiaodong Cao"", ""John Hubbard"", ""Alex Townsend"", ""Karola Meszaros"", ""Dan Barbasch"", ""Michael Nussbaum"", ""Allen Knutson"", ""Steven Strogatz"", ""David Freund"", ""Slawomir Solecki""]",,,,,,SP25,MATH,Supervised Research,Supervised Research,0,0
4901,,2025-08-17T17:19:40.435140,An independent reading course by arrangement with an individual professor. The goal is for the student to master a body of mathematics outside the normal curriculum. The student and professor will set expectations and grading policies at the beginning of the term.,SP25-MATH-4901,"[""Camil Muscalu"", ""Benjamin Dozier"", ""Tara Holm"", ""Inna Zakharevich"", ""David Zywina"", ""Alex Betts"", ""Philippe Sosoe"", ""Daniel Halpern-Leistner"", ""Yunan Yang"", ""Daniel Stern"", ""Xin Zhou"", ""Justin Moore"", ""Marten Wegkamp"", ""Ravi Ramakrishna"", ""Yuri Berest"", ""Jason Manning"", ""Rachel Webb"", ""Marcelo Aguiar"", ""Lionel Levine"", ""Anil Nerode"", ""Ed Swartz"", ""Irena Peeva"", ""Nicolas Templier"", ""Reyer Sjamaar"", ""Robert Connelly"", ""Timothy Riley"", ""Michael Stillman"", ""Kathryn Mann"", ""James West"", ""Alexander Vladimirsky"", ""Martin Kassabov"", ""Laurent Saloff-Coste"", ""Yusheng Luo"", ""Timothy Healey"", ""Xiaodong Cao"", ""John Hubbard"", ""Alex Townsend"", ""Karola Meszaros"", ""Dan Barbasch"", ""Michael Nussbaum"", ""Allen Knutson"", ""Steven Strogatz"", ""David Freund"", ""Slawomir Solecki""]",,,,,,SP25,MATH,Supervised Reading,Supervised Reading,0,0
4980,,2025-08-17T17:19:40.435143,"Examines principles underlying the content of the secondary school mathematics curriculum, including connections with the history of mathematics, technology, and mathematics education research. One credit is awarded for attending two Saturday workshops (see math.cornell.edu/math-5080) and writing a paper. Other credit options are available for students completing additional work, such as tutoring at a local middle school or completing a research paper or project.",SP25-MATH-4980,"[""Mary Ann Huntley""]",,,,,,SP25,MATH,Special Study for Mathematics Teaching,Study for Mathematics Teaching,0,0
5080,,2025-08-17T17:19:40.435147,"Examines principles underlying the content of the secondary school mathematics curriculum, including connections with the history of mathematics, technology, and mathematics education research.",SP25-MATH-5080,"[""Mary Ann Huntley""]",,,,,,SP25,MATH,Special Study for Teachers,Special Study for Teachers,0,0
5200,,2025-08-17T17:19:40.435184,"Covers ordinary differential equations in one and higher dimensions: qualitative, analytic, and numerical methods. Emphasis is on differential equations as models and the implications of the theory for the behavior of the system being modeled and includes an introduction to bifurcations.",SP25-MATH-5200,"[""John Hubbard""]",,0.1,7,True,"Prerequisite: a semester of linear algebra (MATH 2210, MATH 2230, MATH 2310, or MATH 2940) and a semester of multivariable calculus (MATH 2220, MATH 2240, or MATH 1920), or equivalent.",SP25,MATH,Differential Equations and Dynamical Systems,Diff Eqs & Dynamical Systems,0,0
6120,,2025-08-17T17:19:40.435311,"MATH 6110-6120 are the core analysis courses in the mathematics graduate program. MATH 6120 covers complex analysis, Fourier analysis, and distribution theory.",SP25-MATH-6120,"[""Yusheng Luo""]",,0.6000000000000001,1,True,"Prerequisite: Strong performance in an undergraduate analysis course at the level of MATH 4140, or permission of instructor.",SP25,MATH,Complex Analysis,Complex Analysis,0,0
6220,,2025-08-17T17:19:40.435334,"Functional analysis is a branch of mathematical analysis that mainly focuses on the study of infinite-dimensional vector spaces and the operators acting upon them. It builds upon results and ideas from linear algebra and real and complex analysis to develop general frameworks that can be used to study analytical problems. Functional analysis plays a pivotal role in several areas of mathematics, physics, engineering, and even in some areas of computer science and economics. This course will cover the basic theory of Banach, Hilbert, and Sobolev spaces, as well as explore several notable applications, from analyzing partial differential equations (PDEs), numerical analysis, inverse problems, control theory, optimal transportation, and machine learning.",SP25-MATH-6220,"[""Yunan Yang""]",,0.6000000000000001,2,True,"Prerequisite: a first course in real analysis, including exposure to Lebesgue integration (e.g., MATH 6110 or MATH 6210).",SP25,MATH,Applied Functional Analysis,Applied Functional Analysis,0,0
6302,,2025-08-17T17:19:40.435380,"A mathematically rigorous course on lattices. Lattices are periodic sets of vectors in high-dimensional space. They play a central role in modern cryptography, and they arise naturally in the study of high-dimensional geometry (e.g., sphere packings). We will study lattices as both geometric and computational objects. Topics include Minkowski's celebrated theorem, the famous LLL algorithm for finding relatively short lattice vectors, Fourier-analytic methods, basic cryptographic constructions, and modern algorithms for finding shortest lattice vectors. We may also see connections to algebraic number theory.",SP25-MATH-6302,"[""Noah Stephens-Davidowitz""]","[""Demonstrate algorithmic techniques such as basis reduction and sieving."", ""Identify Regev's lattice-based public-key encryption scheme."", ""Understand how Fourier-analytic methods can be used to study the geometry of lattices.""]",0.6000000000000001,1,True,Prerequisite: MATH 4310 or permission of instructor.,SP25,MATH,"Lattices: Geometry, Cryptography, and Algorithms",Lattices,0,0
6320,,2025-08-17T17:19:40.435403,"MATH 6310-6320 are the core algebra courses in the mathematics graduate program. MATH 6320 covers Galois theory, representation theory of finite groups, and introduction to homological algebra.",SP25-MATH-6320,"[""Martin Kassabov""]",,0.6000000000000001,1,True,"Prerequisite: MATH 6310, or permission of instructor.",SP25,MATH,Algebra,Algebra,0,0
6370,,2025-08-17T17:19:40.435428,"An introduction to number theory focusing on the algebraic theory. Topics include, but are not limited to, number fields, Dedekind domains, class groups, Dirichlet's unit theorem, local fields, ramification, decomposition and inertia groups, and the distribution of primes.",SP25-MATH-6370,"[""David Zywina""]",,0.95,1,False,Prerequisite: an advanced course in abstract algebra at the level of MATH 4340.,SP25,MATH,Algebraic Number Theory,Algebraic Number Theory,0,0
6510,,2025-08-17T17:19:40.435451,"MATH 6510-MATH 6520 are the core topology courses in the mathematics graduate program. MATH 6510 is an introductory study of certain geometric processes for associating algebraic objects such as groups to topological spaces. The most important of these are homology groups and homotopy groups, especially the first homotopy group or fundamental group, with the related notions of covering spaces and group actions. The development of homology theory focuses on verification of the Eilenberg-Steenrod axioms and on effective methods of calculation such as simplicial and cellular homology and Mayer-Vietoris sequences. If time permits, the cohomology ring of a space may be introduced.",SP25-MATH-6510,"[""Inna Zakharevich""]",,0.3,2,True,"Prerequisite: strong performance in an undergraduate abstract algebra course at the level of MATH 4340 and point-set topology at the level of MATH 4530, or permission of instructor.",SP25,MATH,Algebraic Topology,Algebraic Topology,0,0
6540,,2025-08-17T17:19:40.435495,"This course is an introduction to some of the fundamentals of homotopy theory. Homotopy theory studies spaces up to homotopy equivalence, not just up to homeomorphism. This allows for a variety of algebraic techniques which are not available when working up to homeomorphism. This class studies the fundamentals and tools of homotopy theory past homology and cohomology. Topics may include computations of higher homotopy groups, simplicial sets, model categories, spectral sequences, and rational homotopy theory.",SP25-MATH-6540,"[""Yuri Berest""]",,0.6000000000000001,1,True,Prerequisite: MATH 6510 or permission of instructor.,SP25,MATH,Homotopy Theory,Homotopy Theory,0,0
6620,,2025-08-17T17:19:40.435519,"Topics include linear connections, Riemannian metrics and parallel translation; covariant differentiation and curvature tensors; the exponential map, the Gauss Lemma and completeness of the metric; isometries and space forms, Jacobi fields and the theorem of Cartan-Hadamard; the first and second variation formulas; the index form of Morse and the theorem of Bonnet-Myers; the Rauch, Hessian, and Laplacian comparison theorems; the Morse index theorem; the conjugate and cut loci; and submanifolds and the Second Fundamental form.",SP25-MATH-6620,"[""Jason Manning""]",,0.1,6,True,"Prerequisite: MATH 6520 or strong performance in analysis (e.g., MATH 4130 and/or MATH 4140), linear algebra (e.g., MATH 4310), and coursework on manifolds and differential geometry at the undergraduate level, such as both MATH 3210 and MATH 4540.",SP25,MATH,Riemannian Geometry,Riemannian Geometry,0,0
6670,,2025-08-17T17:19:40.435639,"A first course in algebraic geometry. Affine and projective varieties. The Nullstellensatz. Schemes and morphisms between schemes. Dimension theory. Potential topics include normalization, Hilbert schemes, curves and surfaces, and other choices of the instructor.",SP25-MATH-6670,"[""Daniel Halpern-Leistner""]",,0.6000000000000001,2,True,"Prerequisite: MATH 6310 or MATH 6340, or equivalent.",SP25,MATH,Algebraic Geometry,Algebraic Geometry,0,0
6720,,2025-08-17T17:19:40.435684,"The second course in a graduate probability series. Topics include conditional expectation, martingales, Markov chains, Brownian motion, and (time permitting) elements of stochastic integration.",SP25-MATH-6720,"[""Lionel Levine""]",,0.95,1,False,Prerequisite: MATH 6710.,SP25,MATH,Probability Theory II,Probability Theory II,0,0
6730,,2025-08-17T17:19:40.435709,"This course will focus on the finite sample theory of statistical inference, emphasizing estimation, hypothesis testing, and confidence intervals.  Specific topics include: uniformly minimum variance unbiased estimators, minimum risk equivariant estimators, Bayes estimators, minimax estimators, the Neyman-Pearson theory of hypothesis testing, and the construction of optimal invariant tests.",SP25-MATH-6730,"[""Florentina Bunea""]",,0.6000000000000001,3,True,"Prerequisite: STSCI 4090/BTRY 4090, MATH 6710 or permission of instructor.",SP25,MATH,Mathematical Statistics I,Mathematical Statistics I,0,0
6810,,2025-08-17T17:19:40.435774,"Covers basic topics in mathematical logic, including propositional and predicate calculus; formal number theory and recursive functions; completeness and incompleteness theorems, compactness and Skolem-Loewenheim theorems. Other topics as time permits.",SP25-MATH-6810,"[""Mark Poor""]",,0.3,2,True,"Prerequisite: an algebra course covering rings and fields (e.g., MATH 4310 or MATH 4330) or permission of instructor.",SP25,MATH,Logic,Logic,0,0
7150,,2025-08-17T17:19:40.435818,"An introduction to (mostly Euclidean) harmonic analysis. Topics usually include convergence of Fourier series, harmonic functions and their conjugates, Hilbert transform, Calderon-Zygmund theory, Littlewood-Paley theory, pseudo-differential operators, restriction theory of the Fourier transform, connections to PDE. Applications to number theory and/or probability theory may also be discussed, as well as Fourier analysis on groups.",SP25-MATH-7150,"[""Camil Muscalu""]",,0.4000000000000001,4,True,"Prerequisite: some basic measure theory, Lp spaces, and (basic) functional analysis (e.g., MATH 6110). Advanced undergraduates who have taken MATH 4130-MATH 4140, but not MATH 6110, need permission of instructor.",SP25,MATH,Fourier Analysis,Fourier Analysis,0,0
7290,,2025-08-17T17:19:40.435899,"Talks on various methods in scientific computing, the analysis of their convergence properties and computational efficiency, and their adaptation to specific applications.",SP25-MATH-7290,"[""Alex Townsend"", ""Anil Damle""]",,,,,,SP25,MATH,Seminar on Scientific Computing and Numerics,Scientific Computing Seminar,0,0
7310,,2025-08-17T17:19:40.435903,Selection of advanced topics from algebra. Course content varies.,SP25-MATH-7310,"[""Ritvik Ramkumar""]",,,,,,SP25,MATH,Topics in Algebra,Topics in Algebra,0,0
7370,,2025-08-17T17:19:40.435907,Selection of advanced topics from number theory. Course content varies.,SP25-MATH-7370,"[""Alex Betts""]",,,,,,SP25,MATH,Topics in Number Theory,Topics in Number Theory,0,0
7410,,2025-08-17T17:19:40.435911,Selection of advanced topics in combinatorics. Course content varies.,SP25-MATH-7410,"[""Ed Swartz""]",,,,,,SP25,MATH,Topics in Combinatorics,Topics in Combinatorics,0,0
7620,,2025-08-17T17:19:40.435915,Selection of advanced topics from modern geometry. Content varies.,SP25-MATH-7620,"[""Kathryn Mann""]",,,,,,SP25,MATH,Topics in Geometry,Topics in Geometry,0,0
7820,,2025-08-17T17:19:40.435918,"A twice weekly seminar in logic. Typically, a topic is selected for each semester, and at least half of the meetings of the course are devoted to this topic with presentations primarily by students. Opportunities are also provided for students and others to present their own work and other topics of interest.",SP25-MATH-7820,"[""Slawomir Solecki""]",,,,,,SP25,MATH,Seminar in Logic,Seminar in Logic,0,0
7900,,2025-08-17T17:19:40.435921,Supervised research for the doctoral dissertation.,SP25-MATH-7900,"[""John Hubbard""]",,,,,,SP25,MATH,Supervised Reading and Research,Supervised Reading & Research,0,0
